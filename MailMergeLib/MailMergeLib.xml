<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MailMergeLib</name>
    </assembly>
    <members>
        <member name="T:MailMergeLib.AngleSharpHtmlConverter">
            <summary>
            Convert HTML to plain text using the AngleSharp library.
            Parsing HTML with AngleSharp es extremely fast, and in addition it occurs only one
            per mail merge job and email texts are usually small.
            </summary>
            <remarks>
            If someone prefers HtmlAgilityPack as a parser instead of AngleSharp, you could reference HtmlAgilityPack
            and include HtmlAgilityPackHtmlConverter.cs in the project.
            Should eventually be improved ;-)
            See also http://daringfireball.net/projects/markdown/ - Inspired by Markdown
            </remarks>
        </member>
        <member name="M:MailMergeLib.AngleSharpHtmlConverter.ToPlainText(System.String)">
            <summary>
            Convert a text file with HTML content to plain text.
            </summary>
            <param name="html">The HTML string to convert.</param>
            <returns>The plain text representation of the HTML content.</returns>
        </member>
        <member name="T:MailMergeLib.AttachmentBuilder">
            <summary>
            Provides methods for building FileAttachments and StringAttachmets for MailMergeMessages.
            </summary>
        </member>
        <member name="T:MailMergeLib.BodyBuilderBase">
            <summary>
            Abstract base class for HtmlBodyBuilder and PlainBodyBuilder.
            </summary>
        </member>
        <member name="P:MailMergeLib.BodyBuilderBase.CharacterEncoding">
            <summary>
            Gets or sets the encoding to be used for any text content (plain text and/or HTML)
            </summary>
        </member>
        <member name="P:MailMergeLib.BodyBuilderBase.TextTransferEncoding">
            <summary>
            Gets or sets the transfer encoding for any text (e.g. SevenBit)
            </summary>
        </member>
        <member name="M:MailMergeLib.BodyBuilderBase.GetBodyPart">
            <summary>
            Gets the ready made body part for a mail message.
            </summary>
        </member>
        <member name="T:MailMergeLib.Credential">
            <summary>
            Class used for serialization of credentials created from user name, password and (optional) domain.
            Credentials will be saved encrypted. Only GetCredential(...) returns the NetworkCredential decrypted.
            </summary>
        </member>
        <member name="M:MailMergeLib.Credential.#ctor">
            <summary>
            Initializes a new instance of the Credential class.
            </summary>
        </member>
        <member name="M:MailMergeLib.Credential.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Credential class.
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="domain"></param>
        </member>
        <member name="M:MailMergeLib.Credential.GetCredential(System.Uri,System.String)">
            <summary>
            Get the network credential.
            </summary>
            <param name="uri"></param>
            <param name="authType"></param>
            <returns>Returns an instance of NetworkCredential.</returns>
        </member>
        <member name="P:MailMergeLib.Credential.Username">
            <summary>
            User name, set as plain text, returned encrypted.
            </summary>
        </member>
        <member name="P:MailMergeLib.Credential.Password">
            <summary>
            Password, set as plain text, returned encrypted.
            </summary>
        </member>
        <member name="P:MailMergeLib.Credential.Domain">
            <summary>
            The domain.
            </summary>
        </member>
        <member name="T:MailMergeLib.Crypto">
            <summary>
            Simple encryption. Used to encrypt security relevant entries in configuration files.
            This is not "safe", but better than storing e.g. network credentials as plain text.
            </summary>
        </member>
        <member name="P:MailMergeLib.Crypto.CryptoKey">
            <summary>
            The crypto key used to calculate an MD5 hash. Change this value before using the Crypto class.
            </summary>
        </member>
        <member name="P:MailMergeLib.Crypto.Encoding">
            <summary>
            Encoding used to encrypt or decrypt. Defaults to Encoding.UTF8
            </summary>
        </member>
        <member name="M:MailMergeLib.Crypto.Encrypt(System.String)">
            <summary>
            Encrypts the string parameter.
            </summary>
            <param name="s">The string to encrypt.</param>
            <returns>Returns the encrypted and base64 encoded string.</returns>
        </member>
        <member name="M:MailMergeLib.Crypto.Decrypt(System.String)">
            <summary>
            Decrypts the string parameter
            </summary>
            <param name="s">The base64 encoded, encrypted string.</param>
            <returns>Returns the decrypted, encoded string.</returns>
        </member>
        <member name="T:MailMergeLib.EmailValidator">
            <summary>
            An Email validator.
            </summary>
            <remarks>
            An Email validator.
            </remarks>
        </member>
        <member name="M:MailMergeLib.EmailValidator.Validate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Validate the specified email address.
            </summary>
            <remarks>
            <para>Validates the syntax of an email address.</para>
            <para>If <paramref name="allowTopLevelDomains"/> is <c>true</c>, then the validator will
            allow addresses with top-level domains like <c>postmaster@dk</c>.</para>
            <para>If <paramref name="allowInternational"/> is <c>true</c>, then the validator
            will use the newer International Email standards for validating the email address.</para>
            </remarks>
            <returns><c>true</c> if the email address is valid; otherwise, <c>false</c>.</returns>
            <param name="email">An email address.</param>
            <param name="allowTopLevelDomains"><c>true</c> if the validator should allow addresses at top-level domains; otherwise, <c>false</c>.</param>
            <param name="allowInternational"><c>true</c> if the validator should allow international characters; otherwise, <c>false</c>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="email"/> is <c>null</c>.
            </exception>
        </member>
        <member name="T:MailMergeLib.FileAttachment">
            <summary>
            Class for file attachments of a <see cref="T:MailMergeLib.MailMergeMessage"/>
            </summary>
        </member>
        <member name="M:MailMergeLib.FileAttachment.#ctor">
            <summary>
            Creates a new file attachment for a <see cref="T:MailMergeLib.MailMergeMessage"/>
            </summary>
        </member>
        <member name="M:MailMergeLib.FileAttachment.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new file attachment for a <see cref="T:MailMergeLib.MailMergeMessage"/>
            </summary>
            <param name="fileName">Full path of the file</param>
            <param name="displayName">Name and extension as the reader of the mail should see it (in case of inline attachments displayName is used for CIDs</param>
            <param name="mimeType">Mime type of the file</param>
        </member>
        <member name="M:MailMergeLib.FileAttachment.#ctor(System.String,System.String)">
            <summary>
            Creates a new file attachment information
            </summary>
            <param name="fileName">Full path of the file </param>
            <param name="displayNameOrCid">Name and extension as the reader of the mail should see it (in case of inline attachments displayName is used for CIDs</param>
        </member>
        <member name="P:MailMergeLib.FileAttachment.Filename">
            <summary>
            Gets the name of the file in the file system
            </summary>
        </member>
        <member name="P:MailMergeLib.FileAttachment.DisplayName">
            <summary>
            Gets the name used in the attachment (used for Cid with inline attachments)
            </summary>
        </member>
        <member name="P:MailMergeLib.FileAttachment.MimeType">
            <summary>
            Gets the MimeType as a string, like "text/plain"
            </summary>
        </member>
        <member name="M:MailMergeLib.FileAttachment.Equals(System.Object)">
            <summary>
            Determines whether the specified FileAttachment instances are equal.
            </summary>
            <remarks>E.g. necessary for HashSet&lt;FileAttachment&gt;.</remarks>
            <param name="fa"></param>
            <returns>Returns true, if both FileAttachments are equal, else false.</returns>
        </member>
        <member name="M:MailMergeLib.FileAttachment.GetHashCode">
            <summary>
            The HashCode for the FileAttachment.
            </summary>
            <returns>Returns the HashCode for the FileAttachment.</returns>
            <remarks>E.g. necessary for HashSet&lt;FileAttachment&gt;.</remarks>
        </member>
        <member name="T:MailMergeLib.HtmlBodyBuilder">
            <summary>
            Builds the HTML body part for a mail message using AngleSharp. Image references will be converted to
            embedded cid content. Image references may include {Placeholders}.
            {Placeholders} in the HTML Body and will be replaced by variable values.
            </summary>
            <remarks>
            Removes any Script sections.
            </remarks>
        </member>
        <member name="M:MailMergeLib.HtmlBodyBuilder.#ctor(MailMergeLib.MailMergeMessage,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="mailMergeMessage">The parent MailMergeMessage, where HtmlBodyBuilder processes HtmlText and Subject properties.</param>
            <param name="dataItem"></param>
        </member>
        <member name="P:MailMergeLib.HtmlBodyBuilder.InlineAtt">
            <summary>
            Gets the list of inline attachments (linked resources) referenced in the HTML text.
            </summary>
        </member>
        <member name="P:MailMergeLib.HtmlBodyBuilder.DocHtml">
            <summary>
            Get the HTML representation of the source document
            </summary>
        </member>
        <member name="M:MailMergeLib.HtmlBodyBuilder.GetBodyPart">
            <summary>
            Gets the ready made body part for a mail message either 
            - as TextPart, if there are no inline attachments
            - as MultipartRelated with a TextPart and one or more MimeParts of type inline attachments
            </summary>
        </member>
        <member name="P:MailMergeLib.HtmlBodyBuilder.DocBaseUri">
            <summary>
            Gets or sets the absolute local base URL of the HTML document. 
            This is used for building the path of embedded images.
            Can be an UNC path string (e.g. \\server\path), a local folder string (e.g. C:\user\x\document), or a URI string (e.g. file://c:/user/x/document)
            </summary>
        </member>
        <member name="P:MailMergeLib.HtmlBodyBuilder.BadInlineFiles">
            <summary>
            Gets inline files referenced in the HTML text, that were missing or not readable.
            </summary>
        </member>
        <member name="P:MailMergeLib.HtmlBodyBuilder.BinaryTransferEncoding">
            <summary>
            Gets or sets the transfer encoding for any binary content (e.g. Base64)
            </summary>
        </member>
        <member name="M:MailMergeLib.HtmlBodyBuilder.ReplaceImgSrcByCid">
            <summary>
            Converts the SRC attribute of IMG tags into embedded content ids (cid).
            Example: &lt;img src="filename.jpg" /&lt; becomes &lt;img src="cid:unique-cid-jpg" /&lt;
            </summary>
        </member>
        <member name="M:MailMergeLib.HtmlBodyBuilder.MakeCid(System.String,System.String,System.String)">
            <summary>
            Makes the content identifier (CID)
            </summary>
            <param name="prefix">i.e. normally "cid:"</param>
            <param name="contentId">unique indentifier</param>
            <param name="fileExt">file extension, so that content type can be easily identified. May be string.empty</param>
            <returns></returns>
        </member>
        <member name="T:MailMergeLib.IHtmlConverter">
            <summary>
            Convert HTML to plain text.
            </summary>
        </member>
        <member name="M:MailMergeLib.IHtmlConverter.ToPlainText(System.String)">
            <summary>
            Convert a text file with HTML content to plain text.
            </summary>
            <param name="html">The HTML string to convert.</param>
            <returns>The plain text representation of the HTML content.</returns>
        </member>
        <member name="T:MailMergeLib.MailMergeAddress">
            <summary>
            Container for a mail merge address.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeAddress.#ctor">
            <summary>
            Represents the address of a mail sender or recipient for use with a MailMergeMessage.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeAddress.#ctor(MailMergeLib.MailAddressType,System.String)">
            <summary>
            Represents the address of a mail sender or recipient for use with a MailMergeMessage.
            </summary>
            <param name="addrType">MailAddressType of the e-mail address.</param>
            <param name="address">A string that contains an e-mail address. Can include display name and address in one string, e.g. "recipient" &lt;recipient@mail.com&gt;.</param>
        </member>
        <member name="M:MailMergeLib.MailMergeAddress.#ctor(MailMergeLib.MailAddressType,System.String,System.String)">
            <summary>
            Represents the address of an electronic mail sender or recipient for use with a MailMergeMessage.
            </summary>
            <param name="addrType">MailAddressType of the e-mail address.</param>
            <param name="address">A string that contains an e-mail address.</param>
            <param name="displayName">A string that contains the display name associated with address. This parameter can be null.</param>
        </member>
        <member name="M:MailMergeLib.MailMergeAddress.#ctor(MailMergeLib.MailAddressType,System.String,System.Text.Encoding)">
            <summary>
            Represents the address of an electronic mail sender or recipient for use with a MailMergeMessage.
            </summary>
            <param name="addrType">MailAddressType of the e-mail address.</param>
            <param name="fullMailAddress">A string that contains a full e-mail address, which must include an address part, and may include a display name part, e.g. "Reci Name" &lt;name@example.com&gt;</param>
            <param name="displayNameCharacterEncoding">Encoding that defines the character set used for displayName.</param>
        </member>
        <member name="P:MailMergeLib.MailMergeAddress.AddrType">
            <summary>
            Gets or sets the type of the MailMergeAddress.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeAddress.Address">
            <summary>
            Gets or sets the mail address of the recipient, e.g. "test@example.com"
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeAddress.DisplayName">
            <summary>
            Gets or sets the display name of the recipient.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeAddress.DisplayNameCharacterEncoding">
            <summary>
            Gets or sets the Encoding that defines the character set used for displayName.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeAddress.DisplayNameCharacterEncodingName">
            <summary>
            Character encoding for the display name.
            Used for serialization. It is the string representation of <see cref="P:MailMergeLib.MailMergeAddress.DisplayNameCharacterEncoding"/>.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeAddress.GetMailAddress(MailMergeLib.MailMergeMessage,System.Object)">
            <summary>
            Gets the MailAddress representation of the MailMergeAddress.
            </summary>
            <returns>Returns a MailAddress ready to be used for a MailAddress, or Null if no address part exists.</returns>
            <exception cref="T:System.NullReferenceException">Throws a NullReferenceException if TextVariableManager is null.</exception>
            <exception cref="T:System.FormatException">Throws a FormatException if the computed MailAddress is not valid.</exception>
        </member>
        <member name="M:MailMergeLib.MailMergeAddress.Equals(System.Object)">
            <summary>
            Determines whether the specified MailMergeAddress instances are equal.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.MailMergeAddress.GetHashCode">
            <summary>
            Returns the hash code for the MailMergeAddress
            </summary>
            <returns></returns>
        </member>
        <member name="T:MailMergeLib.MailAddressType">
            <summary>
            Enumeration of the available types of a MailMergeAddress.
            </summary>
        </member>
        <member name="F:MailMergeLib.MailAddressType.To">
            <summary>
            TO mailbox address.
            </summary>
        </member>
        <member name="F:MailMergeLib.MailAddressType.CC">
            <summary>
            CC carbon copy mailbox address.
            </summary>
        </member>
        <member name="F:MailMergeLib.MailAddressType.Bcc">
            <summary>
            BCC blind carbon copy mailbox address.
            </summary>
        </member>
        <member name="F:MailMergeLib.MailAddressType.From">
            <summary>
            FROM mailbox address.
            </summary>
        </member>
        <member name="F:MailMergeLib.MailAddressType.Sender">
            <summary>
            SENDER mailbox address.
            </summary>
        </member>
        <member name="F:MailMergeLib.MailAddressType.ReplyTo">
            <summary>
            REPLY-TO mailbox address.
            </summary>
        </member>
        <member name="F:MailMergeLib.MailAddressType.ConfirmReadingTo">
            <summary>
            Mailbox address where to send read confirmations.
            </summary>
        </member>
        <member name="F:MailMergeLib.MailAddressType.ReturnReceiptTo">
            <summary>
            Mailbox address where to send return receipts.
            </summary>
        </member>
        <member name="F:MailMergeLib.MailAddressType.TestAddress">
            <summary>
            If this type is used, all address parts (but not the display names) will be replaced by this address (for test purposes)
            </summary>
        </member>
        <member name="T:MailMergeLib.MailMergeAddressCollection">
            <summary>
            Container for mail merge addresses of a mail merge message.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeAddressCollection.#ctor">
            <summary>
            Property <c>MailMergeMessage</c> must be set after creating the instance!
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeAddressCollection.#ctor(MailMergeLib.MailMergeMessage)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeAddressCollection.MailMergeMessage">
            <summary>
            The MailMergeMessage the MailMergeAddressCollection belongs to
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeAddressCollection.Add(MailMergeLib.MailMergeAddress)">
            <summary>
            Adds the address to the address collection.
            For MailAddressType.Sender, MailAddressType.ConfirmReadingTo and MailAddressType.ReturnReceiptTo 
            only the last-in address of this type will be included in the mail message.
            <c>DisplayNameCharacterEncoding</c> will be overridden by <c>MailMergeMessage.Config.CharacterEncoding</c>.
            </summary>
            <param name="address"></param>
        </member>
        <member name="M:MailMergeLib.MailMergeAddressCollection.AddWithCurrentCharacterEncoding(MailMergeLib.MailMergeAddress)">
            <summary>
            Adds the address to the address collection.
            For MailAddressType.Sender, MailAddressType.ConfirmReadingTo and MailAddressType.ReturnReceiptTo 
            only the last-in address of this type will be included in the mail message.
            <c>DisplayNameCharacterEncoding</c> of the address will not be changed.
            </summary>
            <param name="address"></param>
        </member>
        <member name="M:MailMergeLib.MailMergeAddressCollection.Get(MailMergeLib.MailAddressType)">
            <summary>
            Gets all MailMergeAddresses of the specified address type.
            </summary>
            <param name="addrType"></param>
            <returns>Returns all MailMergeAddresses of the specified address type.</returns>
        </member>
        <member name="M:MailMergeLib.MailMergeAddressCollection.ToString(MailMergeLib.MailAddressType,System.Object)">
            <summary>
            Gets the string representation of the collection of mailbox addresses.
            </summary>
            <param name="addrType"></param>
            <param name="dataItem"></param>
            <returns>The string representation of the collection of mailbox addresses</returns>
        </member>
        <member name="M:MailMergeLib.MailMergeAddressCollection.Equals(System.Object)">
            <summary>
            Determines whether the specified <c>MailMergeAddressCollection</c> instances are equal, i.e. containing the same <c>MailMergeAddress</c>es never mind the sequence.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.MailMergeAddressCollection.Equals(MailMergeLib.MailMergeAddressCollection)">
            <summary>
            Determines whether the specified <c>MailMergeAddressCollection</c> instances are equal, i.e. containing the same <c>MailMergeAddress</c>es never mind the sequence.
            </summary>
            <param name="addressCollection"></param>
            <returns></returns>
        </member>
        <member name="T:MailMergeLib.MailMergeMessage">
            <summary>
            Represents an email message that can be sent using the MailMergeLib.MailMergeSender class.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.#ctor">
            <summary>
            Creates an empty mail merge message.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.#ctor(System.String)">
            <summary>
            Creates a new mail merge message.
            </summary>
            <param name="subject">Mail message subject.</param>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.#ctor(System.String,System.String)">
            <summary>
            Creates a new mail merge message.
            </summary>
            <param name="subject">Mail message subject.</param>
            <param name="plainText">Plain text of the mail message.</param>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new mail merge message.
            </summary>
            <param name="subject">Mail message subject.</param>
            <param name="plainText">Plain text part of the mail message.</param>
            <param name="htmlText">HTML message part of the mail message.</param>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{MailMergeLib.FileAttachment})">
            <summary>
            Creates a new mail merge message.
            </summary>
            <param name="subject">Mail message subject.</param>
            <param name="plainText">Plain text part of the mail message.</param>
            <param name="fileAtt">File attachments of the mail message.</param>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{MailMergeLib.FileAttachment})">
            <summary>
            Creates a new mail merge message.
            </summary>
            <param name="subject">Mail message subject.</param>
            <param name="plainText">Plain text part of the mail message.</param>
            <param name="htmlText">HTML message part of the mail message.</param>
            <param name="fileAtt">File attachments of the mail message.</param>
        </member>
        <member name="P:MailMergeLib.MailMergeMessage.Info">
            <summary>
            Information about the <c>MailMergeMessage</c>
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeMessage.MailMergeAddresses">
            <summary>
            Gets the collection of recipients and sender addresses of the message.
            If the collection contains an address of type <see cref="F:MailMergeLib.MailAddressType.TestAddress"/>, then
            all recipient addresses of the collection will be replaced with the mailbox address of the test address.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeMessage.Headers">
            <summary>
            Gets or sets the user defined headers of a mail message.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeMessage.Subject">
            <summary>
            Gets or sets the mail message subject.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeMessage.PlainText">
            <summary>
            Gets or sets the mail message plain text content.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeMessage.HtmlText">
            <summary>
            Gets or sets the mail message HTML content.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeMessage.Templates">
            <summary>
            Gets a collection of type <see cref="T:MailMergeLib.Templates.Templates"/>.
            Templates can be part of <see cref="P:MailMergeLib.MailMergeMessage.PlainText"/> or <see cref="P:MailMergeLib.MailMergeMessage.HtmlText"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeMessage.SmartFormatter">
            <summary>
            Gets or sets the instance of the MailSmartFormatter (derived from SmartFormat.NET's SmartFormatter) which will be used with MailMergeLib.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeMessage.Config">
            <summary>
            The settings for a MailMergeMessage.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeMessage.FileAttachments">
            <summary>
            Gets or sets files that will be attached to a mail message.
            File names may contain placeholders.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeMessage.StreamAttachments">
            <summary>
            Gets or sets streams that will be attached to a mail message.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeMessage.InlineAttachments">
            <summary>
            Gets inline attachments (linked resources of the HTML body) of a mail message.
            They are generated automatically with all image sources pointing to local files.
            For adding non-automatic inline attachments, use <see cref="M:MailMergeLib.MailMergeMessage.AddExternalInlineAttachment(MailMergeLib.FileAttachment)"/> ONLY.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeMessage.StringAttachments">
            <summary>
            Gets or sets string attachments that will be attached to a mail message.
            String attachments can be text or binary.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.AddExternalInlineAttachment(MailMergeLib.FileAttachment)">
            <summary>
            Adds external inline attachments (linked resources of the HTML body) of a mail message.
            They are normally generated automatically with all image sources pointing to local files,
            but with this method such files can be added as well.
            </summary>
            <param name="att"></param>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.ClearExternalInlineAttachment">
            <summary>
            Clears external inline attachments (linked resources of the HTML body) of a mail message.
            They are normally generated automatically with all image sources pointing to local files.
            This method only removes attachments formerly added with AddExternalInlineAttachment.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.SearchAndReplaceVars(System.String,System.Object)">
            <summary>
            Replaces all variables in the text with their corresponding values.
            Used for subject, body and attachment.
            </summary>
            <param name="text">Text to search and replace.</param>
            <param name="dataItem"></param>
            <returns>Returns the text with all variables replaced.</returns>
            <remarks>
            In case <see cref="P:MailMergeLib.SmartFormatMail.Core.Settings.SmartSettings.FormatErrorAction"/> == ErrorAction.ThrowError
            or <see cref="P:MailMergeLib.SmartFormatMail.Core.Settings.SmartSettings.ParseErrorAction"/> == ErrorAction.ThrowError
            we simple catch the exception and simulate setting ErrorAction.MaintainTokens.
            Note: We track such errors by subscribing to Parser.OnParsingFailure and Formatter.OnFormattingFailure.
            </remarks>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.SearchAndReplaceVarsInFilename(System.String,System.Object)">
            <summary>
            Replaces all variables in the text with their corresponding values.
            Filenames may contain backslashes which may not be interpreted as literals.
            That's why "ConvertCharacterStringLiterals" must be false in this method.
            Uses new instances of <see cref="T:MailMergeLib.MailSmartFormatter"/> and <see cref="T:MailMergeLib.SmartFormatterConfig"/>.
            </summary>
            <param name="text">Text to search and replace.</param>
            <param name="dataItem"></param>
            <returns>Returns the text with all variables replaced.</returns>
            <remarks>
            In case <see cref="P:MailMergeLib.SmartFormatMail.Core.Settings.SmartSettings.FormatErrorAction"/> == ErrorAction.ThrowError
            or <see cref="P:MailMergeLib.SmartFormatMail.Core.Settings.SmartSettings.ParseErrorAction"/> == ErrorAction.ThrowError
            we simple catch the exception and simulate setting ErrorAction.MaintainTokens.
            Note: We track such errors by subscribing to Parser.OnParsingFailure and Formatter.OnFormattingFailure.
            </remarks>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.AddSubjectToMailMessage(MimeKit.MimeMessage,System.Object)">
            <summary>
            Prepares the mail message subject:
            Replacing placeholders with their values and setting correct encoding.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.BuildTextMessagePart(System.Object)">
            <summary>
            Prepares the mail message part (plain text and/or HTML:
            Replacing placeholders with their values and setting correct encoding.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.RegisterHtmlTemplates">
            <summary>
            Registers html parts if they exist, otherwise the plain text parts
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.RegisterPlainTextTemplates">
            <summary>
            Registers only plain text parts
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.BuildAttachmentPartsForMessage(System.Object)">
            <summary>
            Prepares the mail message file and string attachments:
            Replacing placeholders with their values and setting correct encoding.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.MakeFullPath(System.String)">
            <summary>
            Calculates the full path of the file name, using the base directory if set.
            </summary>
            <param name="filename"></param>
            <returns>The full path of the file.</returns>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.ConvertHtmlToPlainText(MailMergeLib.IHtmlConverter)">
            <summary>
            Converts the <see cref="P:MailMergeLib.MailMergeMessage.HtmlText"/> into plain text (without tags or html entities)
            and writes it to the <see cref="P:MailMergeLib.MailMergeMessage.PlainText"/> property.
            </summary>
            <param name="converter">
            The IHtmlConverter to be used for converting. If the converter is null, the 
            <see cref="T:MailMergeLib.AngleSharpHtmlConverter"/> will be used.
            </param>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.GetMimeMessages``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Gets a list of MimeMessage representations of the MailMergeMessage for all items of the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <param name="dataSource"></param>
            <returns>Returns all MailMessages ready to be sent by an SmtpClient.</returns>
            <exception cref="T:MailMergeLib.MailMergeMessage.MailMergeMessageException">Throws a general <see cref="T:MailMergeLib.MailMergeMessage.MailMergeMessageException"/>, which contains a list of exceptions giving more details.</exception>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.GetMimeMessage(System.Object)">
            <summary>
            Gets the MimeMessage representation of the MailMergeMessage for a specific data item.
            </summary>
            <param name="dataItem">
            The following types are accepted:
            Dictionary&lt;string,object&gt;, ExpandoObject, DataRow, any other class instances, anonymous types, and null.
            For class instances it's allowed to use the name of parameterless methods; use method names WITHOUT parentheses.
            </param>
            <returns>Returns a MailMessage ready to be sent by an SmtpClient.</returns>
            <exception cref="T:MailMergeLib.MailMergeMessage.MailMergeMessageException">Throws a general <see cref="T:MailMergeLib.MailMergeMessage.MailMergeMessageException"/>, which contains a list of exceptions giving more details.</exception>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.Dispose">
            <summary>
            Dispose MailMergeMessage
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.AddAddressesToMailMessage(MimeKit.MimeMessage,System.Object)">
            <summary>
            Prepares all recipient address and the corresponding header fields of a mail message.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.AddAttributesToMailMessage(MimeKit.MimeMessage,System.Object)">
            <summary>
            Sets all attributes of a mail message.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.Serialize">
            <summary>
            Get the message as a serialized XML string.
            </summary>
            <returns>Returns a string with XML markup.</returns>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.Serialize(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Write a message to an XML stream.
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.Serialize(System.String,System.Text.Encoding)">
            <summary>
            Write message to an XML file.
            </summary>
            <param name="filename"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.Deserialize(System.String)">
            <summary>
            Reads a message from an xml string.
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.Deserialize(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads a message from an xml stream.
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.Deserialize(System.String,System.Text.Encoding)">
            <summary>
            Reads message from an xml file.
            </summary>
            <param name="filename"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.Deserialize(System.IO.StreamReader,System.Boolean)">
            <summary>
            Reads a message xml with a StreamReader.
            </summary>
            <param name="reader"></param>
            <returns>Returns a <see cref="T:MailMergeLib.MailMergeMessage"/> instance.</returns>
            <param name="isStream">If true, the writer will not be closed and disposed, so that the underlying stream can be used on return.</param>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.Equals(MailMergeLib.MailMergeMessage)">
            <summary>
            Compares the MailMergeMessage with an other instance of MailMergeMessage for equality.
            </summary>
            <param name="mmm"></param>
            <returns>Returns true, if both instances are equal, else false.</returns>
            <remarks>
            InlineAttachments are not compared because this property will be populated automatically from any HtmlText.
            StreamAttachments are not included in the comparison.
            </remarks>
        </member>
        <member name="M:MailMergeLib.MailMergeMessage.DisposeFileStreams(MimeKit.MimeMessage)">
            <summary>
            Dispose the streams of file attachments and HTML inline file attachments,
            so that files are fully accessible again
            </summary>
            <param name="mimeMessage"></param>
        </member>
        <member name="T:MailMergeLib.MailMergeMessage.AddressException">
            <summary>
             Mail merge bad address exception.
            </summary>
        </member>
        <member name="T:MailMergeLib.MailMergeMessage.AttachmentException">
            <summary>
            Mail merge attachment exception.
            </summary>
        </member>
        <member name="T:MailMergeLib.MailMergeMessage.EmtpyContentException">
            <summary>
            Mail merge empty content exception.
            </summary>
        </member>
        <member name="T:MailMergeLib.MailMergeMessage.MailMergeMessageException">
            <summary>
            Mail merge message exception.
            </summary>
        </member>
        <member name="T:MailMergeLib.MailMergeMessage.VariableException">
            <summary>
            Mail merge exception for placeholders that are missing in the datasource.
            </summary>
        </member>
        <member name="T:MailMergeLib.MailMergeMessage.ParseException">
            <summary>
            Mail merge exception for not properly formatted templates (e.g. missing closing brace).
            </summary>
        </member>
        <member name="T:MailMergeLib.MailMergeSender">
            <summary>
            Sends MailMergeMessages to an SMTP server. It uses MailKit.Net.Smtp.SmtpClient for low level operations.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeSender.#ctor">
            <summary>
            CTOR
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeSender.IsBusy">
            <summary>
            Returns true, while a Send method is pending.
            Entering a Send method while IsBusy will raise an InvalidOperationException.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeSender.SendAsync``1(MailMergeLib.MailMergeMessage,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Sends mail messages asynchronously to all recipients supplied in the data source
            of the mail merge message.
            </summary>
            <param name="mailMergeMessage">Mail merge message.</param>
            <param name="dataSource">IEnumerable data source with values for the placeholders of the MailMergeMessage.
            IEnumerable&lt;T&gt; where T can be the following types:
            Dictionary&lt;string,object&gt;, ExpandoObject, DataRow, class instances or anonymous types.
            The named placeholders can be the name of a Property, Field, or a parameterless method.
            They can also be chained together by using &quot;dot-notation&quot;.
            </param>
            <remarks>
            In order to use a DataTable as a dataSource, use System.Data.DataSetExtensions and convert it with DataTable.AsEnumerable()
            </remarks>
            <exception>
            If the SMTP transaction is the cause, SmtpFailedRecipientsException, SmtpFailedRecipientException or SmtpException can be expected.
            These exceptions throw after re-trying to send after failures (i.e. after MaxFailures * RetryDelayTime).
            </exception>
            <exception cref="T:System.InvalidOperationException">A send operation is pending.</exception>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.Exception">The first exception found in one of the async tasks.</exception>
            <exception cref="T:MailMergeLib.MailMergeMessage.MailMergeMessageException"></exception>
        </member>
        <member name="M:MailMergeLib.MailMergeSender.SendAsync(MailMergeLib.MailMergeMessage,System.Object)">
            <summary>
            Sends a single mail message asyncronously.
            </summary>
            <remarks>The method raises events before and after sending, as well as on send failure.</remarks>
            <param name="mailMergeMessage">Mail merge message.</param>
            <param name="dataItem">The following types are accepted:
            Dictionary&lt;string,object&gt;, ExpandoObject, DataRow, class instances or anonymous types.
            The named placeholders can be the name of a Property, Field, or a parameterless method.
            They can also be chained together by using &quot;dot-notation&quot;.
            </param>
            <exception>
            If the SMTP transaction is the cause, SmtpFailedRecipientsException, SmtpFailedRecipientException or SmtpException can be expected.
            These exceptions throw after re-trying to send after failures (i.e. after MaxFailures * RetryDelayTime).
            </exception>
            <exception cref="T:System.InvalidOperationException">A send operation is pending.</exception>
            <exception cref="T:System.AggregateException"></exception>
            <exception cref="T:MailMergeLib.MailMergeMessage.MailMergeMessageException"></exception>
        </member>
        <member name="M:MailMergeLib.MailMergeSender.SendMimeMessageAsync(MailKit.Net.Smtp.SmtpClient,MimeKit.MimeMessage,MailMergeLib.SmtpClientConfig)">
            <summary>
            This is the procedure taking care of sending the message (or saving to a file, respectively).
            </summary>
            <param name="smtpClient">The fully configures SmtpClient used to send the MimeMessate</param>
            <param name="mimeMsg">Mime message to send.</param>
            <param name="config"></param>
            <exception>
            If the SMTP transaction is the cause, SmtpFailedRecipientsException, SmtpFailedRecipientException or SmtpException can be expected.
            These exceptions throw after re-trying to send after failures (i.e. after MaxFailures * RetryDelayTime).
            </exception>
            <exception cref="T:MailKit.Net.Smtp.SmtpCommandException"></exception>
            <exception cref="T:MailKit.Net.Smtp.SmtpProtocolException"></exception>
            <exception cref="T:MailKit.Security.AuthenticationException"></exception>
            <exception cref="T:System.Net.Sockets.SocketException"></exception>
        </member>
        <member name="M:MailMergeLib.MailMergeSender.SendMimeMessageToSmtpServerAsync(MailKit.Net.Smtp.SmtpClient,MimeKit.MimeMessage,MailMergeLib.SmtpClientConfig)">
            <summary>
            Sends the MimeMessage to an SMTP server. This is the lowest level of sending a message.
            Connects and authenficates if necessary, but leaves the connection open.
            </summary>
            <param name="smtpClient"></param>
            <param name="message"></param>
            <param name="config"></param>
        </member>
        <member name="M:MailMergeLib.MailMergeSender.SendCancel(System.Int32)">
            <summary>
            Cancel any transactions sending or merging mail.
            </summary>
            <param name="waitTime">The number of milliseconds to wait before cancelation.</param>
        </member>
        <member name="M:MailMergeLib.MailMergeSender.Send``1(MailMergeLib.MailMergeMessage,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Sends mail messages syncronously to all recipients supplied in the data source
            of the mail merge message.
            </summary>
            <param name="mailMergeMessage">Mail merge message.</param>
            <param name="dataSource">IEnumerable data source with values for the placeholders of the MailMergeMessage.
            IEnumerable&lt;T&gt; where T can be the following types:
            Dictionary&lt;string,object&gt;, ExpandoObject, DataRow, class instances or anonymous types.
            The named placeholders can be the name of a Property, Field, or a parameterless method.
            They can also be chained together by using &quot;dot-notation&quot;.
            </param>
            <remarks>
            In order to use a DataTable as a dataSource, use System.Data.DataSetExtensions and convert it with DataTable.AsEnumerable()
            </remarks>
            <exception>
            If the SMTP transaction is the cause, SmtpFailedRecipientsException, SmtpFailedRecipientException or SmtpException can be expected.
            These exceptions throw after re-trying to send after failures (i.e. after MaxFailures * RetryDelayTime).
            </exception>
            <exception cref="T:System.InvalidOperationException">A send operation is pending.</exception>
            <exception cref="T:MailKit.Net.Smtp.SmtpCommandException"></exception>
            <exception cref="T:MailKit.Net.Smtp.SmtpProtocolException"></exception>
            <exception cref="T:MailKit.Security.AuthenticationException"></exception>
            <exception cref="T:MailMergeLib.MailMergeMessage.MailMergeMessageException"></exception>
        </member>
        <member name="M:MailMergeLib.MailMergeSender.Send(MailMergeLib.MailMergeMessage,System.Object)">
            <summary>
            Sends a single mail merge message.
            </summary>
            <param name="mailMergeMessage">Message to send.</param>
            <param name="dataItem">The following types are accepted:
            Dictionary&lt;string,object&gt;, ExpandoObject, DataRow, class instances or anonymous types.
            The named placeholders can be the name of a Property, Field, or a parameterless method.
            They can also be chained together by using &quot;dot-notation&quot;.
            </param>
            <exception>
            If the SMTP transaction is the cause, SmtpFailedRecipientsException, SmtpFailedRecipientException or SmtpException can be expected.
            These exceptions throw after re-trying to send after failures (i.e. after MaxFailures * RetryDelayTime).
            </exception>
            <exception cref="T:System.InvalidOperationException">A send operation is pending.</exception>
            <exception cref="T:MailKit.Net.Smtp.SmtpCommandException"></exception>
            <exception cref="T:MailKit.Net.Smtp.SmtpProtocolException"></exception>
            <exception cref="T:MailKit.Security.AuthenticationException"></exception>
            <exception cref="T:MailMergeLib.MailMergeMessage.MailMergeMessageException"></exception>
        </member>
        <member name="M:MailMergeLib.MailMergeSender.SendMimeMessage(MailKit.Net.Smtp.SmtpClient,MimeKit.MimeMessage,MailMergeLib.SmtpClientConfig)">
            <summary>
            This is the procedure taking care of sending the message (or saving to a file, respectively).
            </summary>
            <param name="smtpClient">The fully configures SmtpClient used to send the MimeMessate</param>
            <param name="mimeMsg">Mime message to send.</param>
            <param name="config"></param>
            <exception>
            If the SMTP transaction is the cause, SmtpFailedRecipientsException, SmtpFailedRecipientException or SmtpException can be expected.
            These exceptions throw after re-trying to send after failures (i.e. after MaxFailures * RetryDelayTime).
            </exception>
            <exception cref="T:MailKit.Net.Smtp.SmtpCommandException"></exception>
            <exception cref="T:MailKit.Net.Smtp.SmtpProtocolException"></exception>
            <exception cref="T:MailKit.Security.AuthenticationException"></exception>
            <exception cref="T:System.Net.Sockets.SocketException"></exception>
        </member>
        <member name="M:MailMergeLib.MailMergeSender.SendMimeMessageToSmtpServer(MailKit.Net.Smtp.SmtpClient,MimeKit.MimeMessage,MailMergeLib.SmtpClientConfig)">
            <summary>
            Sends the MimeMessage to an SMTP server. This is the lowest level of sending a message.
            Connects and authenficates if necessary, but leaves the connection open.
            </summary>
            <param name="smtpClient"></param>
            <param name="message"></param>
            <param name="config"></param>
        </member>
        <member name="E:MailMergeLib.MailMergeSender.OnMessageFailure">
            <summary>
            Event raising when getting the merged MimeMessage of the MailMergeMessage has failed.
            </summary>
        </member>
        <member name="E:MailMergeLib.MailMergeSender.OnBeforeSend">
            <summary>
            Event raising before sending a mail message.
            </summary>
        </member>
        <member name="E:MailMergeLib.MailMergeSender.OnSmtpConnected">
            <summary>
            Event raising right after the <see cref="T:MailKit.Net.Smtp.SmtpClient"/>'s connection to the server is up (but not yet authenticated).
            </summary>
        </member>
        <member name="E:MailMergeLib.MailMergeSender.OnSmtpAuthenticated">
            <summary>
            Event raising after the <see cref="T:MailKit.Net.Smtp.SmtpClient"/> has authenticated on the server.
            </summary>
        </member>
        <member name="E:MailMergeLib.MailMergeSender.OnSmtpDisconnected">
            <summary>
            Event raising after the <see cref="T:MailKit.Net.Smtp.SmtpClient"/> has disconnected from the server.
            </summary>
        </member>
        <member name="E:MailMergeLib.MailMergeSender.OnAfterSend">
            <summary>
            Event raising after sending a mail message.
            </summary>
        </member>
        <member name="E:MailMergeLib.MailMergeSender.OnSendFailure">
            <summary>
            Event raising, if an error occurs when sending a mail message.
            </summary>
        </member>
        <member name="E:MailMergeLib.MailMergeSender.OnMergeBegin">
            <summary>
            Event raising before starting with mail merge.
            </summary>
        </member>
        <member name="E:MailMergeLib.MailMergeSender.OnMergeProgress">
            <summary>
            Event raising during mail merge progress, i.e. after each message sent.
            </summary>
        </member>
        <member name="E:MailMergeLib.MailMergeSender.OnMergeComplete">
            <summary>
            Event raising after completing mail merge.
            </summary>
        </member>
        <member name="P:MailMergeLib.MailMergeSender.Config">
            <summary>
            The settings for a MailMergeSender.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeSender.GetInitializedSmtpClient(MailMergeLib.SmtpClientConfig)">
            <summary>
            Get a new instance of a pre-configured SmtpClient
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeSender.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="M:MailMergeLib.MailMergeSender.Dispose">
            <summary>
            Releases all resources used by MailMergeSender
            </summary>
        </member>
        <member name="T:MailMergeLib.MailSenderAfterSendEventArgs">
            <summary>
            Argument used by the event after sending of a message is completed.
            </summary>
        </member>
        <member name="T:MailMergeLib.MailSenderBeforeSendEventArgs">
            <summary>
            Argument used by the event before sending of a message is completed.
            </summary>
        </member>
        <member name="T:MailMergeLib.MailSenderSmtpClientEventArgs">
            <summary>
            Argument used by the event right after the connection to the server is up (but not yet authenticated).
            </summary>
        </member>
        <member name="T:MailMergeLib.MailSenderMergeBeginEventArgs">
            <summary>
            Argument used by the event before starting a mail merge.
            </summary>
        </member>
        <member name="T:MailMergeLib.MailSenderMergeProgressEventArgs">
            <summary>
            Argument used by the event after every mail sent during a mail merge.
            </summary>
        </member>
        <member name="T:MailMergeLib.MailSenderMergeCompleteEventArgs">
            <summary>
            Argument used by the event after finishing a mail merge.
            </summary>
        </member>
        <member name="T:MailMergeLib.MailSenderSendFailureEventArgs">
            <summary>
            Argument used by the event after sending a message has failed.
            </summary>
        </member>
        <member name="T:MailMergeLib.MailMessageFailureEventArgs">
            <summary>
            Argument used by the event when getting the merged MimeMessage of the MailMergeMessage has failed.
            With the arguments supplied the event delegate is able to either resolve what caused the error and
            set a correctly built <see cref="F:MailMergeLib.MailMessageFailureEventArgs.MimeMessage"/> to be sent, or finally give up and let throw a
            <see cref="T:MailMergeLib.MailMergeMessage.MailMergeMessageException"/>,
            </summary>
        </member>
        <member name="F:MailMergeLib.MailMessageFailureEventArgs.Error">
            <summary>
            Contains the exceptions caught will trying to build the <see cref="F:MailMergeLib.MailMessageFailureEventArgs.MimeMessage"/>.
            </summary>
        </member>
        <member name="F:MailMergeLib.MailMessageFailureEventArgs.MailMergeMessage">
            <summary>
            The <see cref="F:MailMergeLib.MailMessageFailureEventArgs.MailMergeMessage"/> which tried to build the <see cref="F:MailMergeLib.MailMessageFailureEventArgs.MimeMessage"/>.
            </summary>
        </member>
        <member name="F:MailMergeLib.MailMessageFailureEventArgs.DataSource">
            <summary>
            The data item which was used to build the <see cref="F:MailMergeLib.MailMessageFailureEventArgs.MimeMessage"/>.
            </summary>
        </member>
        <member name="F:MailMergeLib.MailMessageFailureEventArgs.MimeMessage">
            <summary>
            The <see cref="F:MailMergeLib.MailMessageFailureEventArgs.MimeMessage"/> which could be built until any errors occurred.
            The delegate may modify the mime message by resolving any errors and return the new <see cref="F:MailMergeLib.MailMessageFailureEventArgs.MimeMessage"/>.
            </summary>
        </member>
        <member name="F:MailMergeLib.MailMessageFailureEventArgs.ThrowException">
            <summary>
            The value returned to the <see cref="F:MailMergeLib.MailMessageFailureEventArgs.MailMergeMessage"/> build process to determine
            whether a <see cref="T:MailMergeLib.MailMergeMessage.MailMergeMessageException"/> should be thrown.
            Default to true.
            </summary>
        </member>
        <member name="T:MailMergeLib.MailSmartFormatter">
            <summary>
            The formatter used by MailMergeLib for replacing placeholders with variables' content.
            </summary>
            <remarks>
            MailSmartFormatter derives from SmartFormatter.
            SmartFormatter was extend with public HashSet&lt;string&gt; properties MissingVariables and MissingFormatters.
            This way we can set formatErrorAction = ErrorAction.Ignore, track missing variables and decide for throwing an exception later when generating the MimeMessage.
            </remarks>
            <example>
            Assume an object x with property "Name"
            a) Format depending on Name is null or string.Empty or other: Format("{Name:choose(null|):N/A|empty|{Name}}", x);
            b) Format DateTime requires the "named formatter" with name "default" because of the additional colons in the time format: SmartFormatter.Format("{Now:default:dd.MM.yyyy hh:mm:ss}", DateTime.Now);
            </example>
        </member>
        <member name="M:MailMergeLib.MailSmartFormatter.#ctor(MailMergeLib.SmartFormatterConfig)">
            <summary>
            CTOR.
            Create an instance which loads the Formatters and Source extensions required by MailMergeLib.
            Error actions are SmartFormatters defaults.
            </summary>
            <param name="config"></param>
        </member>
        <member name="P:MailMergeLib.MailSmartFormatter.Templates">
            <summary>
            Gets or sets the <see cref="T:MailMergeLib.SmartFormatMail.Extensions.TemplateFormatter"/> where the templates can be registered later on.
            </summary>
        </member>
        <member name="T:MailMergeLib.MessageConfig">
            <summary>
            Configuration for MailMergeMessage.
            </summary>
        </member>
        <member name="M:MailMergeLib.MessageConfig.#ctor">
            <summary>
            CTOR for MailMergeMessage configuration.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.TextTransferEncoding">
            <summary>
            Content transfer encoding for text like HTML.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.BinaryTransferEncoding">
            <summary>
            Content transfer encoding for binary content like image attachments.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.CharacterEncodingName">
            <summary>
            Character encoding.
            Used for serialization. It is the string representation of <see cref="P:MailMergeLib.MessageConfig.CharacterEncoding"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.CharacterEncoding">
            <summary>
            Character encoding.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.CultureInfoName">
            <summary>
            Culture information.
            Used for serialization. It is the string representation of <see cref="P:MailMergeLib.MessageConfig.CultureInfo"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.CultureInfo">
            <summary>
            Culture information.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.FileBaseDirectory">
            <summary>
            Gets or sets the local base directory of HTML linked resources and other attachments.
            The <see cref="P:MailMergeLib.MessageConfig.FileBaseDirectory"/> must be a an absolute path, while *file paths are relative* to the <see cref="P:MailMergeLib.MessageConfig.FileBaseDirectory"/>.
            It is useful for retrieval of inline attachments (linked resources of the HTML body).
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.IgnoreIllegalRecipientAddresses">
            <summary>
            If true, empty or illegal recipient addresses will be discarded.
            If false, an exception will be thrown.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.IgnoreMissingInlineAttachments">
            <summary>
            If true, missing or not readable inline attachments will be discarded.
            If false, an exception will be thrown.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.IgnoreMissingFileAttachments">
            <summary>
            If true, missing or not readable file attachments will be discarded.
            If false, an exception will be thrown.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.Priority">
            <summary>
            The priority header for the mail message.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.StandardFromAddressText">
            <summary>
            The standard mailbox address which will be used as one of the "from" addresses.
            Used for serialization. It is the string representation of <see cref="P:MailMergeLib.MessageConfig.StandardFromAddress"/>. 
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.StandardFromAddress">
            <summary>
            The standard mailbox address which will be used as one of the "from" addresses.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.Organization">
            <summary>
            The organization header of a mail message.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.Xmailer">
            <summary>
            Gets or sets the "x-mailer" header value to be used.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageConfig.SmartFormatterConfig">
            <summary>
            SmartFormatter configuration for parsing and formatting errors.
            </summary>
        </member>
        <member name="T:MailMergeLib.MessageOutput">
            <summary>
            Enumeration of message output types
            </summary>
        </member>
        <member name="F:MailMergeLib.MessageOutput.None">
            <summary>
            Will process all messages but discard them just before sending / writing to disk.
            </summary>
        </member>
        <member name="F:MailMergeLib.MessageOutput.SmtpServer">
            <summary>
            Send messages through an SMTP server
            </summary>
        </member>
        <member name="F:MailMergeLib.MessageOutput.Directory">
            <summary>
            Writes messages to the specified MailOutputDirectory.
            </summary>
        </member>
        <member name="T:MailMergeLib.MessageStore.FileMessageInfo">
            <summary>
            A class for storing metadata about a <see cref="T:MailMergeLib.MailMergeMessage"/>, when
            serialized <see cref="T:MailMergeLib.MailMergeMessage"/>es are stored in the file system.
            </summary>
        </member>
        <member name="M:MailMergeLib.MessageStore.FileMessageInfo.#ctor">
            <summary>
            CTOR.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.FileMessageInfo.MessageFile">
            <summary>
            The location of the xml serialized <see cref="T:MailMergeLib.MailMergeMessage"/> file.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.FileMessageInfo.MessageEncoding">
            <summary>
            Gets or sets the <see cref="T:System.Text.Encoding"/> to apply when loading <see cref="T:MailMergeLib.MailMergeMessage"/>s from the file system.
            </summary>
        </member>
        <member name="M:MailMergeLib.MessageStore.FileMessageInfo.LoadMessage">
            <summary>
            Deserializes the <see cref="T:MailMergeLib.MailMergeMessage"/> and returns a new message object.
            </summary>
            <returns>Returns the deserialized object from the <see cref="P:MailMergeLib.MessageStore.FileMessageInfo.MessageFile"/>.</returns>
        </member>
        <member name="T:MailMergeLib.MessageStore.FileMessageStore">
            <summary>
            The class searches deserialized <see cref="T:MailMergeLib.MailMergeMessage"/> files in the file system,
            and reads their metadata (<see cref="T:MailMergeLib.MessageStore.IMessageInfo"/>).
            </summary>
        </member>
        <member name="M:MailMergeLib.MessageStore.FileMessageStore.#ctor">
            <summary>
            Constructor of the <see cref="T:MailMergeLib.MessageStore.FileMessageStore"/> class.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.FileMessageStore.MessageEncodingName">
            <summary>
            The <see cref="T:System.Text.Encoding"/> to apply when loading <see cref="T:MailMergeLib.MailMergeMessage"/>s.
            Used for serialization. It is the string representation of <see cref="P:MailMergeLib.MessageStore.FileMessageStore.MessageEncoding"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.FileMessageStore.MessageEncoding">
            <summary>
            Gets or sets the <see cref="T:System.Text.Encoding"/> to apply when loading <see cref="T:MailMergeLib.MailMergeMessage"/>s from the file system.
            </summary>
            <remarks><see cref="P:MailMergeLib.MessageStore.FileMessageStore.MessageEncoding"/> will also be used by <see cref="T:MailMergeLib.MessageStore.FileMessageInfo"/></remarks>
        </member>
        <member name="M:MailMergeLib.MessageStore.FileMessageStore.#ctor(System.String[],System.String[],System.Text.Encoding)">
            <summary>
            Constructor of the <see cref="T:MailMergeLib.MessageStore.FileMessageStore"/> class.
            </summary>
            <param name="searchFolders"></param>
            <param name="searchPatterns"></param>
            <param name="encoding">The <see cref="T:System.Text.Encoding"/> to apply when loading <see cref="T:MailMergeLib.MailMergeMessage"/>s.</param>
        </member>
        <member name="P:MailMergeLib.MessageStore.FileMessageStore.SearchFolders">
            <summary>
            A list of absolute paths to file system folders where deserialized <see cref="T:MailMergeLib.MailMergeMessage"/> files are stored.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.FileMessageStore.SearchPatterns">
            <summary>
            The search pattern to use for getting the file names of deserialized <see cref="T:MailMergeLib.MailMergeMessage"/> files.
            Default search pattern is "*.*".
            </summary>
        </member>
        <member name="M:MailMergeLib.MessageStore.FileMessageStore.ScanForMessages">
            <summary>
            Scans all <see cref="P:MailMergeLib.MessageStore.FileMessageStore.SearchFolders"/> for deserialized <see cref="T:MailMergeLib.MailMergeMessage"/> files.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.MessageStore.FileMessageStore.Serialize">
            <summary>
            Get the message store as a serialized xml string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.MessageStore.FileMessageStore.Serialize(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Write a message store to an xml stream.
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.MessageStore.FileMessageStore.Serialize(System.String,System.Text.Encoding)">
            <summary>
            Write message store to a file.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:MailMergeLib.MessageStore.FileMessageStore.Serialize(System.IO.TextWriter,System.Boolean)">
            <summary>
            Write a message store with a StreamWriter.
            </summary>
            <param name="writer"></param>
            <param name="isStream">If true, the writer will not be closed and disposed, so that the underlying stream can be used on return.</param>
        </member>
        <member name="M:MailMergeLib.MessageStore.FileMessageStore.Deserialize(System.String)">
            <summary>
            Reads a message store from an xml string.
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.MessageStore.FileMessageStore.Deserialize(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads a message store from an xml stream.
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.MessageStore.FileMessageStore.Deserialize(System.String,System.Text.Encoding)">
            <summary>
            Reads message store from an xml file.
            </summary>
            <param name="filename"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.MessageStore.FileMessageStore.Equals(System.Object)">
            <summary>
            Compares this object with another.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.MessageStore.FileMessageStore.GetHashCode">
            <summary>
            Gets the hash code of this object.
            </summary>
            <returns>Returns the hash code of this object.</returns>
        </member>
        <member name="T:MailMergeLib.MessageStore.IMessageInfo">
            <summary>
            Metadata about a <see cref="T:MailMergeLib.MailMergeMessage"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.IMessageInfo.Id">
            <summary>
            The Id of the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.IMessageInfo.Category">
            <summary>
            The category of the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.IMessageInfo.Description">
            <summary>
            Description for the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.IMessageInfo.Comments">
            <summary>
            Comments for the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.IMessageInfo.Data">
            <summary>
            Data hint for the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="T:MailMergeLib.MessageStore.IMessageStore">
            <summary>
            Interface for a messsge store that is able to search for deserialized <see cref="T:MailMergeLib.MailMergeMessage"/>s
            and to read their metadata (<see cref="T:MailMergeLib.MessageStore.IMessageInfo"/>).
            </summary>
        </member>
        <member name="M:MailMergeLib.MessageStore.IMessageStore.ScanForMessages">
            <summary>
            Scans for deserialized <see cref="T:MailMergeLib.MailMergeMessage"/>s.
            </summary>
            <returns>Returns an enumeration of <see cref="T:MailMergeLib.MessageStore.IMessageInfo"/>s.</returns>
        </member>
        <member name="T:MailMergeLib.MessageStore.MessageInfo">
            <summary>
            Metadata about a <see cref="T:MailMergeLib.MailMergeMessage"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.MessageInfo.Id">
            <summary>
            The Id of the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.MessageInfo.Category">
            <summary>
            The category of the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.MessageInfo.Description">
            <summary>
            Description for the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.MessageInfo.Comments">
            <summary>
            Comments for the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.MessageInfo.Data">
            <summary>
            Data hint for the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="M:MailMergeLib.MessageStore.MessageInfo.Equals(MailMergeLib.MessageStore.IMessageInfo)">
            <summary>
            Determines whether the specified <see cref="T:MailMergeLib.MessageStore.MessageInfoBase"/> is equal to the current.
            </summary>
            <param name="other"></param>
            <returns>bool</returns>
        </member>
        <member name="M:MailMergeLib.MessageStore.MessageInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.MessageStore.MessageInfo.GetHashCode">
            <summary>
            Returns the hash code for this class.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MailMergeLib.MessageStore.MessageInfoBase">
            <summary>
            Metadata about the <see cref="T:MailMergeLib.MailMergeMessage"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.MessageInfoBase.Id">
            <summary>
            The Id of the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.MessageInfoBase.Category">
            <summary>
            The category of the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.MessageInfoBase.Description">
            <summary>
            Description for the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.MessageInfoBase.Comments">
            <summary>
            Comments for the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="P:MailMergeLib.MessageStore.MessageInfoBase.Data">
            <summary>
            Data hint for the <see cref="T:MailMergeLib.MailMergeMessage"/>. A user-defined string without further relevance for <see cref="N:MailMergeLib"/>.
            </summary>
        </member>
        <member name="M:MailMergeLib.MessageStore.MessageInfoBase.Equals(MailMergeLib.MessageStore.IMessageInfo)">
            <summary>
            Determines whether the specified <see cref="T:MailMergeLib.MessageStore.MessageInfoBase"/> is equal to the current.
            </summary>
            <param name="other"></param>
            <returns>bool</returns>
        </member>
        <member name="M:MailMergeLib.MessageStore.MessageInfoBase.LoadMessage">
            <summary>
            Returns the <see cref="T:MailMergeLib.MailMergeMessage"/> for these metadata.
            Method must be overridden in a derived class.
            </summary>
            <returns>Returns an instance of <see cref="T:MailMergeLib.MailMergeMessage"/></returns>
        </member>
        <member name="M:MailMergeLib.MessageStore.MessageInfoBase.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.MessageStore.MessageInfoBase.GetHashCode">
            <summary>
            Returns the hash code for this class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.MessageStore.MessageInfoBase.Read(System.IO.FileSystemInfo)">
            <summary>
            Get the <see cref="T:MailMergeLib.MessageStore.IMessageInfo"/> of a serialized <see cref="T:MailMergeLib.MailMergeMessage"/>.
            </summary>
            <param name="fileSystemInfo"></param>
            <returns>Return the <see cref="T:MailMergeLib.MessageStore.IMessageInfo"/> of a serialized <see cref="T:MailMergeLib.MailMergeMessage"/></returns>
        </member>
        <member name="M:MailMergeLib.MessageStore.MessageInfoBase.Read(System.String)">
            <summary>
            Get the <see cref="T:MailMergeLib.MessageStore.IMessageInfo"/> of a serialized <see cref="T:MailMergeLib.MailMergeMessage"/>.
            </summary>
            <param name="xmlString">The XML string of a serialized <see cref="T:MailMergeLib.MailMergeMessage"/>.</param>
            <returns>Return the <see cref="T:MailMergeLib.MessageStore.IMessageInfo"/> of a serialized <see cref="T:MailMergeLib.MailMergeMessage"/></returns>
        </member>
        <member name="M:MailMergeLib.PlainBodyBuilder.GetBodyPart">
            <summary>
            Gets the ready made body part for a mail message as TextPart
            </summary>
        </member>
        <member name="T:MailMergeLib.SenderConfig">
            <summary>
            Configuration for MailMergeSender.
            </summary>
        </member>
        <member name="M:MailMergeLib.SenderConfig.#ctor">
            <summary>
            CTOR for MailMergeSender configuration.
            </summary>
        </member>
        <member name="P:MailMergeLib.SenderConfig.MaxNumOfSmtpClients">
            <summary>
            Gets or sets the maximum number of SmtpClient to send messages concurrently.
            Valid numbers are 1 to 50, defaults to 5.
            </summary>
        </member>
        <member name="P:MailMergeLib.SenderConfig.SmtpClientConfig">
            <summary>
            Gets or sets the array of configurations the SmtpClients will use.
            The first SmtpClientConfig is the "standard", any second is the "backup".
            Other instances of SmtpClientConfig in the array are used for parallel sending messages.
            </summary>
        </member>
        <member name="T:MailMergeLib.Serialization.IPEndPointSerializer">
            <summary>
            Serializer for <see cref="T:System.Net.IPEndPoint"/> objects.
            </summary>
        </member>
        <member name="T:MailMergeLib.Serialization.SerializationFactory">
            <summary>
            Factory class for generating serialization related objects.
            </summary>
        </member>
        <member name="F:MailMergeLib.Serialization.SerializationFactory.Namespace">
            <summary>
            Default namespace used during xml serialization.
            </summary>
        </member>
        <member name="F:MailMergeLib.Serialization.SerializationFactory.NamespacePrefix">
            <summary>
            The namespace prefix for the DefaultNamespace
            </summary>
        </member>
        <member name="M:MailMergeLib.Serialization.SerializationFactory.GetStandardSerializer(System.Type)">
            <summary>
            Create a pre-configures YAXSerializer.
            </summary>
            <param name="classType"></param>
            <returns>Returns a pre-configured YAXSerializer.</returns>
        </member>
        <member name="M:MailMergeLib.Serialization.SerializationFactory.Serialize``1(``0)">
            <summary>
            Serialize type T to XML.
            </summary>
            <returns>Returns a string with XML markup.</returns>
        </member>
        <member name="M:MailMergeLib.Serialization.SerializationFactory.Serialize``1(``0,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Write type T to an XML stream.
            </summary>
            <param name="obj"></param>
            <param name="stream"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.Serialization.SerializationFactory.Serialize``1(``0,System.String,System.Text.Encoding)">
            <summary>
            Write type T to a file.
            </summary>
            <param name="obj"></param>
            <param name="filename"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.Serialization.SerializationFactory.Serialize``1(``0,System.IO.TextWriter,System.Boolean)">
            <summary>
            Write type T with a StreamWriter.
            </summary>
            <param name="obj"></param>
            <param name="writer"></param>
            <param name="isStream">If true, the writer will not be closed and disposed, so that the underlying stream can be used on return.</param>
        </member>
        <member name="M:MailMergeLib.Serialization.SerializationFactory.Deserialize``1(System.String)">
            <summary>
            Deserialize the parameter with XML markup to an instance of T.
            </summary>
            <param name="xml"></param>
            <returns>Returns an instance of T.</returns>
        </member>
        <member name="M:MailMergeLib.Serialization.SerializationFactory.Deserialize``1(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads T from an XML stream.
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.Serialization.SerializationFactory.Deserialize``1(System.String,System.Text.Encoding)">
            <summary>
            Reads T from an XML file.
            </summary>
            <param name="filename"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.Serialization.SerializationFactory.Deserialize``1(System.IO.StreamReader,System.Boolean)">
            <summary>
            Reads T XML with a StreamReader.
            </summary>
            <param name="reader"></param>
            <returns>Returns a T instance.</returns>
            <param name="isStream">If true, the writer will not be closed and disposed, so that the underlying stream can be used on return.</param>
        </member>
        <member name="T:MailMergeLib.Settings">
            <summary>
            MailMergeLib settings
            </summary>
        </member>
        <member name="M:MailMergeLib.Settings.#ctor">
            <summary>
            CTOR
            </summary>
        </member>
        <member name="P:MailMergeLib.Settings.SenderConfig">
            <summary>
            Configuration for the MailMergeSender.
            </summary>
        </member>
        <member name="P:MailMergeLib.Settings.MessageConfig">
            <summary>
            Configuration for the MailMergeMessage.
            </summary>
        </member>
        <member name="P:MailMergeLib.Settings.CryptoKey">
            <summary>
            Gets or sets the Key used for encryption and decryption.
            Should be set individually.
            </summary>
        </member>
        <member name="M:MailMergeLib.Settings.Serialize(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Write MailMergeLib settings to a stream.
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.Settings.Serialize(System.String)">
            <summary>
            Write MailMergeLib settings to a file.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:MailMergeLib.Settings.Serialize">
            <summary>
            Get MailMergeLib settings as an xml string.
            </summary>
            <returns>Returns the MailMergeLib settings as an xml string.</returns>
        </member>
        <member name="M:MailMergeLib.Settings.Serialize(System.IO.TextWriter,System.Boolean)">
            <summary>
            Write MailMergeLib settings with a StreamWriter.
            </summary>
            <param name="writer"></param>
            <param name="isStream">If true, the writer will not be closed and disposed, so that the underlying stream can be used on return.</param>
        </member>
        <member name="M:MailMergeLib.Settings.Deserialize(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads MailMergeLib settings from a stream.
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.Settings.Deserialize(System.String,System.Text.Encoding)">
            <summary>
            Reads MailMergeLib settings from a file.
            </summary>
            <param name="filename"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.Settings.Deserialize(System.String)">
            <summary>
            Read the MailMergeLib settings from an xml string.
            </summary>
            <returns>Returns the MailMergeLib settings as an xml string.</returns>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Extensions.IFormatter">
            <summary> Converts an object to a string. </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Extensions.IFormatter.Names">
            <summary>
            An extension can be explicitly called by using any of its names.
            Any extensions with "" names will be called implicitly (when no named formatter is specified).
            For example, "{0:default:N2}" or "{0:d:N2}" will explicitly call the "default" extension.
            "{0:N2}" will implicitly call the "default" extension (and other extensions, too).
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Extensions.IFormatter.TryEvaluateFormat(MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo)">
            <summary>
            Writes the current value to the output, using the specified format.
            IF this extension cannot write the value, returns false, otherwise true.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo">
            <summary>
            Contains all necessary info for formatting a value
            </summary>
            <example>
            In "{Items.Length:choose(1,2,3):one|two|three}",
            the <see cref="P:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.CurrentValue" /> would be the value of "Items.Length",
            the <see cref="P:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.FormatterOptions" /> would be "1,2,3",
            and the <see cref="P:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.Format" /> would be "one|two|three".
            </example>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.CurrentValue">
            <summary>
            The current value that is to be formatted.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.Format">
            <summary>
            This format specifies how to output the <see cref="P:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.CurrentValue" />.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.Placeholder">
            <summary>
            Contains all the details about the current placeholder.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.Alignment">
            <summary>
            Alignment inserts spaces into the output to ensure consistent length.
            Positive numbers insert spaces to the left, to right-align the text.
            Negative numbers insert spaces to the right, to left-align the text.
            This should only work with the Default Formatter, but is optional with custom formatters.
            This is primarily for compatibility with String.Format.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.FormatterOptions">
            <summary>
            When a named formatter is used, this will hold the options.
            For example, in "{0:choose(1,2,3):one|two|three}", FormatterOptions is "1,2,3".
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.FormatDetails">
            <summary>
            Infrequently used details, often used for debugging
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.Write(System.String)">
            <summary>
            Writes a string to the output.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.Write(System.String,System.Int32,System.Int32)">
            <summary>
            Writes a substring to the output.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.Write(MailMergeLib.SmartFormatMail.Core.Parsing.Format,System.Object)">
            <summary>
            Writes the nested format to the output.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.FormattingException(System.String,MailMergeLib.SmartFormatMail.Core.Parsing.FormatItem,System.Int32)">
            <summary>
            Creates a <see cref="M:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.FormattingException(System.String,MailMergeLib.SmartFormatMail.Core.Parsing.FormatItem,System.Int32)" /> associated with the <see cref="P:MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo.Format" />.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Extensions.ISelectorInfo">
            <summary>
            Contains all the necessary information for evaluating a selector.
            </summary>
            <example>
            When evaluating "{Items.Length}",
            the CurrentValue might be Items, and the Selector would be "Length".
            The job of an ISource is to set CurrentValue to Items.Length.
            </example>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Extensions.ISelectorInfo.CurrentValue">
            <summary>
            The current value to evaluate.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Extensions.ISelectorInfo.SelectorText">
            <summary>
            The selector to evaluate
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Extensions.ISelectorInfo.SelectorIndex">
            <summary>
            The index of the selector in a multi-part selector.
            Example: {Person.Birthday.Year} has 3 seletors,
            and Year has a SelectorIndex of 2.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Extensions.ISelectorInfo.SelectorOperator">
            <summary>
            The operator that came before the selector; typically "."
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Extensions.ISelectorInfo.Result">
            <summary>
            Sets the result of evaluating the selector.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Extensions.ISelectorInfo.Placeholder">
            <summary>
            Contains all the details about the current placeholder.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Extensions.ISelectorInfo.FormatDetails">
            <summary>
            Infrequently used details, often used for debugging
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Extensions.ISource">
            <summary>
            Evaluates a selector.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Extensions.ISource.TryEvaluateSelector(MailMergeLib.SmartFormatMail.Core.Extensions.ISelectorInfo)">
            <summary>
            Evaluates the <see cref="!:ISelectorInfo.Selector" /> based on the <see cref="P:MailMergeLib.SmartFormatMail.Core.Extensions.ISelectorInfo.CurrentValue" />.
            If this extension cannot evaluate the Selector, returns False.
            Otherwise, sets the <see cref="P:MailMergeLib.SmartFormatMail.Core.Extensions.ISelectorInfo.Result" /> and returns true.
            </summary>
            <param name="selectorInfo"></param>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Formatting.FormatCache">
            <summary>
            Caches information about a format operation
            so that repeat calls can be optimized to run faster.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Formatting.FormatCache.Format">
            <summary>
            Caches the parsed format.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Formatting.FormatCache.CachedObjects">
            <summary>
            Storage for any misc objects.
            This can be used by extensions that want to cache data,
            such as reflection information.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Formatting.FormatDetails">
            <summary>
            Contains extra information about the item currently being formatted.
            These objects are not often used, so they are all wrapped up here.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Formatting.FormatDetails.Formatter">
            <summary>
            The original formatter responsible for formatting this item.
            It can be used for evaluating nested formats.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Formatting.FormatDetails.OriginalArgs">
            <summary>
            The original set of arguments passed to the format function.
            These provide global-access to the original arguments.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Formatting.FormatDetails.FormatCache">
            <summary>
            This object can be used to cache resources between formatting calls.
            It will be null unless FormatWithCache is called.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Formatting.FormatDetails.Provider">
            <summary>
            The Format Provider that can be used to determine how to
            format items such as numbers, dates, and anything else that
            might be culture-specific.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Formatting.FormatDetails.FormattingException">
            <summary>
            If ErrorAction is set to OutputErrorsInResult, this will
            contain the exception that caused the formatting error.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Formatting.FormatDetails.Settings">
            <summary>
            Contains case-sensitivity settings
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Formatting.FormattingException">
            <summary>
            An exception caused while attempting to output the format.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Output.IOutput">
            <summary>
            Writes a string to the output.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Output.IOutput.Write(System.String,MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo)">
            <summary>
            Writes a string to the output.
            </summary>
            <param name="text"></param>
            <param name="formattingInfo"></param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Output.IOutput.Write(System.String,System.Int32,System.Int32,MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo)">
            <summary>
            Writes a substring to the output.
            </summary>
            <param name="text"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
            <param name="formattingInfo"></param>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Output.StringOutput">
            <summary>
            Wraps a StringBuilder so it can be used for output.
            This is used for the default output.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Output.StringOutput.ToString">
            <summary>
            Returns the results of the StringBuilder.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Output.TextWriterOutput">
            <summary>
            Wraps a TextWriter so that it can be used for output.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Parsing.Format">
            <summary>
            Represents a parsed format string.
            Contains a list of <see cref="T:MailMergeLib.SmartFormatMail.Core.Parsing.FormatItem" />s,
            including <see cref="T:MailMergeLib.SmartFormatMail.Core.Parsing.LiteralText" />s
            and <see cref="T:MailMergeLib.SmartFormatMail.Core.Parsing.Placeholder" />s.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Parsing.Format.Substring(System.Int32)">
            <summary>Returns a substring of the current Format.</summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Parsing.Format.Substring(System.Int32,System.Int32)">
            <summary>Returns a substring of the current Format.</summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Parsing.Format.IndexOf(System.Char)">
            <summary>
            Searches the literal text for the search char.
            Does not search in nested placeholders.
            </summary>
            <param name="search"></param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Parsing.Format.IndexOf(System.Char,System.Int32)">
            <summary>
            Searches the literal text for the search char.
            Does not search in nested placeholders.
            </summary>
            <param name="search"></param>
            <param name="startIndex"></param>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Parsing.Format.SplitList">
            <summary>
            Contains the results of a Split operation.
            This allows deferred splitting of items.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Parsing.Format.GetLiteralText">
            <summary>
            Retrieves the literal text contained in this format.
            Excludes escaped chars, and does not include the text
            of placeholders
            </summary>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Parsing.Format.ToString">
            <summary>
            Reconstructs the format string, but doesn't include escaped chars
            and tries to reconstruct placeholders.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Parsing.FormatItem">
            <summary>
            Base class that represents a substring
            of text from a parsed format string.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Parsing.FormatItem.RawText">
            <summary>
            Retrieves the raw text that this item represents.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Parsing.LiteralText">
            <summary>
            Represents the literal text that is found
            in a parsed format string.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Parsing.Parser">
            <summary>
            Parses a format string.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Parsing.Parser.Settings">
            <summary>
            Gets or sets the <seealso cref="T:MailMergeLib.SmartFormatMail.Core.Settings.SmartSettings" /> for Smart.Format
            </summary>
        </member>
        <member name="E:MailMergeLib.SmartFormatMail.Core.Parsing.Parser.OnParsingFailure">
            <summary>
            Event raising, if an error occurs during parsing.
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Core.Parsing.Parser._alphanumericSelectors">
            <summary>
            If false, only digits are allowed as selectors.
            If true, selectors can be alpha-numeric.
            This allows optimized alpha-character detection.
            Specify any additional selector chars in AllowedSelectorChars.
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Core.Parsing.Parser._allowedSelectorChars">
            <summary>
            A list of allowable selector characters,
            to support additional selector syntaxes such as math.
            Digits are always included, and letters can be included
            with AlphanumericSelectors.
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Core.Parsing.Parser._operators">
            <summary>
            A list of characters that come between selectors.
            This can be "." for dot-notation, "[]" for arrays,
            or even math symbols.
            By default, there are no operators.
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Core.Parsing.Parser._alternativeEscaping">
            <summary>
            If false, double-curly braces are escaped.
            If true, the AlternativeEscapeChar is used for escaping braces.
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Core.Parsing.Parser._alternativeEscapeChar">
            <summary>
            If AlternativeEscaping is true, then this character is
            used to escape curly braces.
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Core.Parsing.Parser.CharLiteralEscapeChar">
            <summary>
            The character literal escape character e.g. for \t (TAB) and others.
            This is kind of overlapping functionality with <see cref="M:MailMergeLib.SmartFormatMail.Core.Parsing.Parser.UseAlternativeEscapeChar(System.Char)" />.
            Note: In a future release escape characters for placeholders and character literals should become the same.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Parsing.Parser.AddAlphanumericSelectors">
            <summary>
            Includes a-z and A-Z in the list of allowed selector chars.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Parsing.Parser.AddAdditionalSelectorChars(System.String)">
            <summary>
            Adds specific characters to the allowed selector chars.
            </summary>
            <param name="chars"></param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Parsing.Parser.AddOperators(System.String)">
            <summary>
            Adds specific characters to the allowed operator chars.
            An operator is a character that is in the selector string
            that splits the selectors.
            </summary>
            <param name="chars"></param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Parsing.Parser.UseAlternativeEscapeChar(System.Char)">
            <summary>
            Sets the AlternativeEscaping option to True
            so that braces will only be escaped after the
            specified character.
            </summary>
            <param name="alternativeEscapeChar">Defaults to backslash</param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Parsing.Parser.UseBraceEscaping">
            <summary>
            [Default]
            Uses {{ and }} for escaping braces for compatibility with String.Format.
            However, this does not work very well with nested placeholders,
            so it is recommended to use an alternative escape char.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Core.Parsing.Parser.ParsingErrorText.#ctor">
            <summary>
            CTOR.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Parsing.Parser.ParsingErrorText.Item(MailMergeLib.SmartFormatMail.Core.Parsing.Parser.ParsingError)">
            <summary>
            Gets the string representation of the ParsingError enum.
            </summary>
            <param name="parsingErrorKey"></param>
            <returns>The string representation of the ParsingError enum</returns>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Parsing.ParsingErrorEventArgs">
            <summary>
            Supplies information about parsing errors.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Parsing.ParsingErrorEventArgs.Errors">
            <summary>
            All parsing errors which occurred during parsing.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Parsing.ParsingErrorEventArgs.ThrowsException">
            <summary>
            If true, the errors will throw an exception.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Parsing.ParsingErrors">
            <summary>
            Represents parsing errors in a Format string.
            This exception only gets thrown when Parser.ErrorAction is set to ThrowError.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Parsing.Placeholder">
            <summary>
            A placeholder is the part of a format string between the { braces }.
            </summary>
            <example>
            For example, in "{Items.Length,10:choose(1,2,3):one|two|three}",
            the <see cref="P:MailMergeLib.SmartFormatMail.Core.Parsing.Placeholder.Alignment" />s is "10",
            the <see cref="T:MailMergeLib.SmartFormatMail.Core.Parsing.Selector" />s are "Items" and "Length",
            the <see cref="P:MailMergeLib.SmartFormatMail.Core.Parsing.Placeholder.FormatterName" /> is "choose",
            the <see cref="P:MailMergeLib.SmartFormatMail.Core.Parsing.Placeholder.FormatterOptions" /> is "1,2,3",
            and the <see cref="P:MailMergeLib.SmartFormatMail.Core.Parsing.Placeholder.Format" /> is "one|two|three".
            </example>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Parsing.Selector">
            <summary>
            Represents a single selector
            in the text in a <see cref="T:MailMergeLib.SmartFormatMail.Core.Parsing.Placeholder" />
            that comes before the colon.
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Core.Parsing.Selector.operatorStart">
            <summary>
            Keeps track of where the "operators" started for this item.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Parsing.Selector.SelectorIndex">
            <summary>
            The index of the selector in a multi-part selector.
            Example: {Person.Birthday.Year} has 3 seletors,
            and Year has a SelectorIndex of 2.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Parsing.Selector.Operator">
            <summary>
            The operator that came before the selector; typically "."
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Settings.ErrorAction">
            <summary>
            Determines how format errors are handled.
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Core.Settings.ErrorAction.ThrowError">
            <summary>Throws an exception.  This is only recommended for debugging, so that formatting errors can be easily found.</summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Core.Settings.ErrorAction.OutputErrorInResult">
            <summary>Includes an issue message in the output</summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Core.Settings.ErrorAction.Ignore">
            <summary>Ignores errors and tries to output the data anyway</summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Core.Settings.ErrorAction.MaintainTokens">
            <summary>Leaves invalid tokens unmodified in the text.</summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Core.Settings.SmartSettings">
            <summary>
            <see cref="N:MailMergeLib.SmartFormatMail" /> settings to be applied for parsing and formatting.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Settings.SmartSettings.FormatErrorAction">
            <summary>
            Gets or sets the <see cref="T:MailMergeLib.SmartFormatMail.Core.Settings.ErrorAction" /> to apply for the <see cref="T:MailMergeLib.SmartFormatMail.SmartFormatter" />.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Settings.SmartSettings.ParseErrorAction">
            <summary>
            Gets or sets the <see cref="T:MailMergeLib.SmartFormatMail.Core.Settings.ErrorAction" /> to apply for the <see cref="T:MailMergeLib.SmartFormatMail.Core.Parsing.Parser" />.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Settings.SmartSettings.CaseSensitivity">
            <summary>
            Determines whether placeholders are case-sensitive or not.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Core.Settings.SmartSettings.ConvertCharacterStringLiterals">
            <summary>
            This setting is relevant for the <see cref="T:MailMergeLib.SmartFormatMail.Core.Parsing.LiteralText" />.
            If true (the default), character string literals are treated like in "normal" string.Format:
            string.Format("\t")   will return a "TAB" character
            If false, character string literals are not converted, just like with this string.Format:
            string.Format(@"\t")  will return the 2 characters "\" and "t"
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Extensions.ConditionalFormatter.TryEvaluateCondition(MailMergeLib.SmartFormatMail.Core.Parsing.Format,System.Decimal,System.Boolean@,MailMergeLib.SmartFormatMail.Core.Parsing.Format@)">
            <summary>
            Evaluates a conditional format.
            Each condition must start with a comparor: "&gt;/&gt;=", "&lt;/&lt;=", "=", "!=".
            Conditions must be separated by either "&amp;" (AND) or "/" (OR).
            The conditional statement must end with a "?".
            Examples:
            &gt;=21&amp;&lt;30&amp;!=25/=40?
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Extensions.DefaultFormatter">
            <summary>
            Do the default formatting, same logic as "String.Format".
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Extensions.DefaultSource.TryEvaluateSelector(MailMergeLib.SmartFormatMail.Core.Extensions.ISelectorInfo)">
            <summary>
            Performs the default index-based selector, same as String.Format.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Extensions.IsMatchFormatter">
            <summary>
            Formatter with evaluation of regular expressions.
            </summary>
            <remarks>
            Syntax:
            {value:ismatch(regex): format | default}
            Or in context of a list:
            {myList:list:{:ismatch(^regex$):{:format}|'no match'}|, | and }
            </remarks>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Extensions.ListFormatter">
            <summary>
            If the source value is an array (or supports ICollection),
            then each item will be custom formatted.
            Syntax:
            #1: "format|spacer"
            #2: "format|spacer|last spacer"
            #3: "format|spacer|last spacer|two spacer"
            The format will be used for each item in the collection, the spacer will be between all items, and the last spacer
            will replace the spacer for the last item only.
            Example:
            CustomFormat("{Dates:D|; |; and }", {#1/1/2000#, #12/31/2999#, #9/9/9999#}) = "January 1, 2000; December 31, 2999;
            and September 9, 9999"
            In this example, format = "D", spacer = "; ", and last spacer = "; and "
            Advanced:
            Composite Formatting is allowed in the format by using nested braces.
            If a nested item is detected, Composite formatting will be used.
            Example:
            CustomFormat("{Sizes:{Width}x{Height}|, }", {new Size(4,3), new Size(16,9)}) = "4x3, 16x9"
            In this example, format = "{Width}x{Height}".  Notice the nested braces.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Extensions.ListFormatter.TryEvaluateSelector(MailMergeLib.SmartFormatMail.Core.Extensions.ISelectorInfo)">
            <summary>
            This allows an integer to be used as a selector to index an array (or list).
            This is better described using an example:
            CustomFormat("{Dates.2.Year}", {#1/1/2000#, #12/31/2999#, #9/9/9999#}) = "9999"
            The ".2" selector is used to reference Dates[2].
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Extensions.ListFormatter._collectionIndex">
            <remarks>
            Wrap, so that CollectionIndex can be used without code changes.
            </remarks>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Extensions.ListFormatter.CollectionIndex">
            <remarks>
            System.Runtime.Remoting.Messaging and CallContext.Logical[Get|Set]Data 
            not supported by .Net Core. Instead .Net Core provides AsyncLocal&lt;T&gt;
            Good examples are: https://msdn.microsoft.com/en-us/library/dn906268(v=vs.110).aspx
            and https://github.com/StephenCleary/AsyncLocal/blob/master/src/UnitTests/UnitTests.cs
            </remarks>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Extensions.PluralLocalizationFormatter.#ctor(System.String)">
            <summary>
            Initializes the plugin with rules for many common languages.
            If no CultureInfo is supplied to the formatter, the
            default language rules will be used by default.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Extensions.CustomPluralRuleProvider">
            <summary>
            Use this class to provide custom plural rules to Smart.Format
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Extensions.TemplateFormatter">
            <summary>
            Template Formatter allows for registering reusable templates, and use them by name.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Extensions.TemplateFormatter.#ctor(MailMergeLib.SmartFormatMail.SmartFormatter)">
            <summary>
            CTOR.
            </summary>
            <param name="formatter"></param>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Extensions.TemplateFormatter.Names">
            <summary>
            Gets or sets the name of the extension.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Extensions.TemplateFormatter.TryEvaluateFormat(MailMergeLib.SmartFormatMail.Core.Extensions.IFormattingInfo)">
            <summary>
            This method is called by the <see cref="T:MailMergeLib.SmartFormatMail.SmartFormatter" /> to obtain the formatting result of this extension.
            </summary>
            <param name="formattingInfo"></param>
            <returns>Returns true if successful, else false.</returns>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Extensions.TemplateFormatter.Register(System.String,System.String)">
            <summary>
            Register a new template.
            </summary>
            <param name="templateName">A name for the template, which is not already registered.</param>
            <param name="template">The string to be used as a template.</param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Extensions.TemplateFormatter.Remove(System.String)">
            <summary>
            Remove a template by its name.
            </summary>
            <param name="templateName"></param>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Extensions.TemplateFormatter.Clear">
            <summary>
            Remove all templates.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Extensions.TimeFormatter.#ctor">
            <summary>
            Initializes the extension with no default TimeTextInfo.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Extensions.TimeFormatter.#ctor(System.String)">
            <summary>
            Initializes the extension with a default TimeTextInfo.
            </summary>
            <param name="defaultTwoLetterLanguageName">This will be used when no CultureInfo is supplied.  Can be null.</param>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.FormattingErrorEventArgs">
            <summary>
            Supplies information about formatting errors.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.FormattingErrorEventArgs.Placeholder">
            <summary>
            Placeholder which caused an error.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.FormattingErrorEventArgs.ErrorIndex">
            <summary>
            Location where the error occurred.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.FormattingErrorEventArgs.IgnoreError">
            <summary>
            Information whether error will throw an exception.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Smart">
            <summary>
            This class holds a Default instance of the SmartFormatter.
            The default instance has all extensions registered.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartExtensions.AppendSmart(System.Text.StringBuilder,System.String,System.Object[])">
            <summary> Appends a formatted string, using the same semantics as Smart.Format. </summary>
            <param name="sb">The StringBuilder that will be used for output</param>
            <param name="format">The template that defines how the arguments are formatted</param>
            <param name="args">A list of arguments to be used in formatting</param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartExtensions.AppendLineSmart(System.Text.StringBuilder,System.String,System.Object[])">
            <summary> AppendLines a formatted string, using the same semantics as Smart.Format. </summary>
            <param name="sb">The StringBuilder that will be used for output</param>
            <param name="format">The template that defines how the arguments are formatted</param>
            <param name="args">A list of arguments to be used in formatting</param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartExtensions.WriteSmart(System.IO.TextWriter,System.String,System.Object[])">
            <summary> Writes out a formatted string, using the same semantics as Smart.Format. </summary>
            <param name="writer">The TextWriter that will be used for output</param>
            <param name="format">The template that defines how the arguments are formatted</param>
            <param name="args">A list of arguments to be used in formatting</param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartExtensions.WriteLineSmart(System.IO.TextWriter,System.String,System.Object[])">
            <summary> Writes out a formatted string, using the same semantics as Smart.Format. </summary>
            <param name="writer">The TextWriter that will be used for output</param>
            <param name="format">The template that defines how the arguments are formatted</param>
            <param name="args">A list of arguments to be used in formatting</param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartExtensions.FormatSmart(System.String,System.Object[])">
            <summary> Formats the specified arguments using this string as a template. </summary>
            <param name="format">The template that defines how the arguments are formatted</param>
            <param name="args">A list of arguments to be used in formatting</param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartExtensions.FormatSmart(System.String,MailMergeLib.SmartFormatMail.Core.Formatting.FormatCache@,System.Object[])">
            <summary>
            Formats the specified arguments using this string as a template.
            Caches the parsing results for increased performance.
            </summary>
            <param name="format">The template that defines how the arguments are formatted</param>
            <param name="args">A list of arguments to be used in formatting</param>
            <param name="cache">Outputs an object that increases performance if the same format string is used repeatedly.</param>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.SmartFormatter">
            <summary>
            This class contains the Format method that constructs
            the composite string by invoking each extension.
            </summary>
        </member>
        <member name="E:MailMergeLib.SmartFormatMail.SmartFormatter.OnFormattingFailure">
            <summary>
            Event raising, if an error occurs during formatting.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.SmartFormatter.SourceExtensions">
            <summary>
            Gets the list of <see cref="T:MailMergeLib.SmartFormatMail.Core.Extensions.ISource" /> source extensions.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.SmartFormatter.FormatterExtensions">
            <summary>
            Gets the list of <see cref="T:MailMergeLib.SmartFormatMail.Core.Extensions.IFormatter" /> formatter extensions.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartFormatter.GetNotEmptyFormatterExtensionNames">
            <summary>
            Gets all names of registered formatter extensions which are not empty.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartFormatter.AddExtensions(MailMergeLib.SmartFormatMail.Core.Extensions.ISource[])">
            <summary>
            Adds each extensions to this formatter.
            Each extension must implement ISource.
            </summary>
            <param name="sourceExtensions"></param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartFormatter.AddExtensions(MailMergeLib.SmartFormatMail.Core.Extensions.IFormatter[])">
            <summary>
            Adds each extensions to this formatter.
            Each extension must implement IFormatter.
            </summary>
            <param name="formatterExtensions"></param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartFormatter.GetSourceExtension``1">
            <summary>
            Searches for a Source Extension of the given type, and returns it.
            This can be used to easily find and configure extensions.
            Returns null if the type cannot be found.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartFormatter.GetFormatterExtension``1">
            <summary>
            Searches for a Formatter Extension of the given type, and returns it.
            This can be used to easily find and configure extensions.
            Returns null if the type cannot be found.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.SmartFormatter.Parser">
            <summary>
            Gets or set the instance of the <see cref="T:MailMergeLib.SmartFormatMail.Core.Parsing.Parser" />
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.SmartFormatter.ErrorAction">
            <summary>
            Gets or set the <see cref="T:MailMergeLib.SmartFormatMail.Core.Settings.ErrorAction" /> for the formatter.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.SmartFormatter.Settings">
            <summary>
            Get the <see cref="T:MailMergeLib.SmartFormatMail.Core.Settings.SmartSettings" /> for Smart.Format
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartFormatter.Format(System.String,System.Object[])">
            <summary>
            Replaces one or more format items in as specified string with the string representation of a specific object.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">The object to format.</param>
            <returns>Returns the formated input with items replaced with their string representation.</returns>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartFormatter.Format(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Replaces one or more format items in as specified string with the string representation of a specific object.
            </summary>
            <param name="provider">The <see cref="T:System.IFormatProvider" /> to use.</param>
            <param name="format">A composite format string.</param>
            <param name="args">The object to format.</param>
            <returns>Returns the formated input with items replaced with their string representation.</returns>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartFormatter.Format(MailMergeLib.SmartFormatMail.Core.Formatting.FormattingInfo)">
            <summary>
            Format the input given in parameter <see cref="T:MailMergeLib.SmartFormatMail.Core.Formatting.FormattingInfo" />.
            </summary>
            <param name="formattingInfo"></param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartFormatter.EvaluateFormatters(MailMergeLib.SmartFormatMail.Core.Formatting.FormattingInfo)">
            <summary>
            Try to get a suitable formatter.
            </summary>
            <param name="formattingInfo"></param>
            <exception cref="T:MailMergeLib.SmartFormatMail.Core.Formatting.FormattingException"></exception>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartFormatter.InvokeFormatterExtensions(MailMergeLib.SmartFormatMail.Core.Formatting.FormattingInfo)">
            <summary>
            First check whether the named formatter name exist in of the <see cref="P:MailMergeLib.SmartFormatMail.SmartFormatter.FormatterExtensions" />,
            next check whether the named formatter is able to process the format.
            </summary>
            <param name="formattingInfo"></param>
            <returns>True if an FormatterExtension was found, else False.</returns>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.SmartObjects">
            <summary>
            Represents a list of objects to be used as a value argument to <c>Smart.Format</c>/>.
            With SmartObjects
            * all objects used for Smart.Format can be collected in one place as the first argument
            * the format string can be written like each object would be the first argument of Smart.Format
            * there is no need to bother from which argument a value should come from
            </summary>
            <remarks>
            In case more than one object has the same member (or key) name, the value of the first object in the list will
            prevail.
            Change the order of objects in the list to change the object priority.
            </remarks>
            <code>
            var d1 = new Dictionary&lt;string,string&gt; { {"myKey", "myValue"} };
            var d2 = new Dictionary&lt;string,string&gt; { {"mySecondKey", "mySecondValue"} };
            var smartObj = new SmartObjects();
            smartObj.AddRange(new object[] {d1, d2});
            Smart.Format("{myKey} - {mySecondKey}", smartSrc);
            result: "myValue - mySecondValue"
            </code>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartObjects.#ctor">
            <summary>
            Initializes a new instance of the <c>SmartObjects</c> class.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartObjects.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Initializes a new instance of the <c>SmartObjects</c>
            class that contains elements copied from the specified collection.
            </summary>
            <param name="objList">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartObjects.Add(System.Object)">
            <summary>
            Adds an object to the end of list.
            </summary>
            <param name="obj">Any object except types of SmartSource</param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.SmartObjects.AddRange(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Adds the elements of the specified collection to the end of the list.
            </summary>
            <param name="objList">Any list of objects except objects of type SmartSource</param>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Utilities.FormatDelegate">
            <summary>
            This class wraps a delegate, allowing it to be used as a parameter
            to any string-formatting method (such as <see cref="M:System.String.Format(System.String,System.Object)" />).
            For example:
            <code>
             var textWithLink = String.Format("Please click on {0:this link}.", new FormatDelegate((text) => Html.ActionLink(text, "SomeAction"));
             </code>
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Utilities.FormatDelegate.ToString(System.String,System.IFormatProvider)">
            <summary>
            Implements System.IFormattable
            </summary>
            <param name="format"></param>
            <param name="formatProvider"></param>
            <returns></returns>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Utilities.PluralRules.PluralRuleDelegate">
            <summary>
            This delegate determines which singular or plural word
            should be chosen for the given quantity.
            This allows each language to define its own behavior
            for singular or plural words.
            It should return the index of the correct parameter.
            </summary>
            <param name="value">The value that is being referenced by the singular or plural words</param>
            <param name="pluralCount"></param>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Utilities.PluralRules.GetPluralRule(System.String)">
            <summary>Construct a ruleset for the language code.</summary>
            <param name="twoLetterISOLanguageName">The language code in two-letter ISO-639 format.</param>
            <remarks>
            The pluralization rules are taken from
            <see cref="!:http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html" />.
            </remarks>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Utilities.PluralRules.Between(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Returns True if the value is inclusively between the min and max and has no fraction.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Utilities.TimeSpanUtility.ToTimeString(System.TimeSpan,MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions,MailMergeLib.SmartFormatMail.Utilities.TimeTextInfo)">
            <summary>
            <para>Turns a TimeSpan into a human-readable text.</para>
            <para>Uses the specified timeSpanFormatOptions.</para>
            <para>For example: "31.23:59:00.555" = "31 days 23 hours 59 minutes 0 seconds 555 milliseconds"</para>
            </summary>
            <param name="FromTime"></param>
            <param name="options">
            <para>A combination of flags that determine the formatting options.</para>
            <para>These will be combined with the default timeSpanFormatOptions.</para>
            </param>
            <param name="timeTextInfo">An object that supplies the text to use for output</param>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Utilities.TimeSpanUtility.DefaultFormatOptions">
            <summary>
            These are the default options that will be used when no option is specified.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatMail.Utilities.TimeSpanUtility.AbsoluteDefaults">
            <summary>
            These are the absolute default options that will be used as
            a safeguard, just in case DefaultFormatOptions is missing a value.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Utilities.TimeSpanUtility.Floor(System.TimeSpan,System.Int64)">
            <summary>
            <para>Returns the largest <c>TimeSpan</c> less than or equal to the specified interval.</para>
            <para>For example: <c>Floor("00:57:00", TimeSpan.TicksPerMinute * 5) =&gt; "00:55:00"</c></para>
            </summary>
            <param name="FromTime">A <c>TimeSpan</c> to be rounded.</param>
            <param name="intervalTicks">Specifies the interval for rounding.  Use <c>TimeSpan.TicksPer____</c>.</param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Utilities.TimeSpanUtility.Ceiling(System.TimeSpan,System.Int64)">
            <summary>
            <para>Returns the smallest <c>TimeSpan</c> greater than or equal to the specified interval.</para>
            <para>For example: <c>Ceiling("00:57:00", TimeSpan.TicksPerMinute * 5) =&gt; "01:00:00"</c></para>
            </summary>
            <param name="FromTime">A <c>TimeSpan</c> to be rounded.</param>
            <param name="intervalTicks">Specifies the interval for rounding.  Use <c>TimeSpan.TicksPer____</c>.</param>
        </member>
        <member name="M:MailMergeLib.SmartFormatMail.Utilities.TimeSpanUtility.Round(System.TimeSpan,System.Int64)">
            <summary>
            <para>Returns the <c>TimeSpan</c> closest to the specified interval.</para>
            <para>For example: <c>Round("00:57:00", TimeSpan.TicksPerMinute * 5) =&gt; "00:55:00"</c></para>
            </summary>
            <param name="FromTime">A <c>TimeSpan</c> to be rounded.</param>
            <param name="intervalTicks">Specifies the interval for rounding.  Use <c>TimeSpan.TicksPer____</c>.</param>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions">
            <summary>
            <para>Determines all options for time formatting.</para>
            <para>This one value actually contains 4 settings:</para>
            <para><c>Abbreviate</c> / <c>AbbreviateOff</c></para>
            <para><c>LessThan</c> / <c>LessThanOff</c></para>
            <para><c>Truncate</c> &#160; <c>Auto</c> / <c>Shortest</c> / <c>Fill</c> / <c>Full</c></para>
            <para>
                <c>Range</c> &#160; <c>MilliSeconds</c> / <c>Seconds</c> / <c>Minutes</c> / <c>Hours</c> / <c>Days</c> /
                <c>Weeks</c> (Min / Max)
            </para>
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.InheritDefaults">
            <summary>
            Specifies that all <c>timeSpanFormatOptions</c> should be inherited from
            <c>TimeSpanUtility.DefaultTimeFormatOptions</c>.
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.Abbreviate">
            <summary>
            Abbreviates units.
            Example: "1d 2h 3m 4s 5ms"
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.AbbreviateOff">
            <summary>
            Does not abbreviate units.
            Example: "1 day 2 hours 3 minutes 4 seconds 5 milliseconds"
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.LessThan">
            <summary>
            Displays "less than 1 (unit)" when the TimeSpan is smaller than the minimum range.
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.LessThanOff">
            <summary>
            Displays "0 (units)" when the TimeSpan is smaller than the minimum range.
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.TruncateShortest">
            <summary>
            <para>Displays the highest non-zero value within the range.</para>
            <para>Example: "00.23:00:59.000" = "23 hours"</para>
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.TruncateAuto">
            <summary>
            <para>Displays all non-zero values within the range.</para>
            <para>Example: "00.23:00:59.000" = "23 hours 59 minutes"</para>
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.TruncateFill">
            <summary>
            <para>Displays the highest non-zero value and all lesser values within the range.</para>
            <para>Example: "00.23:00:59.000" = "23 hours 0 minutes 59 seconds 0 milliseconds"</para>
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.TruncateFull">
            <summary>
            <para>Displays all values within the range.</para>
            <para>Example: "00.23:00:59.000" = "0 days 23 hours 0 minutes 59 seconds 0 milliseconds"</para>
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.RangeMilliSeconds">
            <summary>
            <para>Determines the range of units to display.</para>
            <para>You may combine two values to form the minimum and maximum for the range.</para>
            <para>
                Example: (RangeMinutes) defines a range of Minutes only; (RangeHours | RangeSeconds) defines a range of Hours
                to Seconds.
            </para>
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.RangeSeconds">
            <summary>
            <para>Determines the range of units to display.</para>
            <para>You may combine two values to form the minimum and maximum for the range.</para>
            <para>
                Example: (RangeMinutes) defines a range of Minutes only; (RangeHours | RangeSeconds) defines a range of Hours
                to Seconds.
            </para>
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.RangeMinutes">
            <summary>
            <para>Determines the range of units to display.</para>
            <para>You may combine two values to form the minimum and maximum for the range.</para>
            <para>
                Example: (RangeMinutes) defines a range of Minutes only; (RangeHours | RangeSeconds) defines a range of Hours
                to Seconds.
            </para>
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.RangeHours">
            <summary>
            <para>Determines the range of units to display.</para>
            <para>You may combine two values to form the minimum and maximum for the range.</para>
            <para>
                Example: (RangeMinutes) defines a range of Minutes only; (RangeHours | RangeSeconds) defines a range of Hours
                to Seconds.
            </para>
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.RangeDays">
            <summary>
            <para>Determines the range of units to display.</para>
            <para>You may combine two values to form the minimum and maximum for the range.</para>
            <para>
                Example: (RangeMinutes) defines a range of Minutes only; (RangeHours | RangeSeconds) defines a range of Hours
                to Seconds.
            </para>
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions.RangeWeeks">
            <summary>
            <para>Determines the range of units to display.</para>
            <para>You may combine two values to form the minimum and maximum for the range.</para>
            <para>
                Example: (RangeMinutes) defines a range of Minutes only; (RangeHours | RangeSeconds) defines a range of Hours
                to Seconds.
            </para>
            </summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions._Abbreviate">
            <summary>(for internal use only)</summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions._LessThan">
            <summary>(for internal use only)</summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions._Truncate">
            <summary>(for internal use only)</summary>
        </member>
        <member name="F:MailMergeLib.SmartFormatMail.Utilities.TimeSpanFormatOptions._Range">
            <summary>(for internal use only)</summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatMail.Utilities.TimeTextInfo">
            <summary>
            Supplies the localized text used for TimeSpan formatting.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmartFormatterConfig">
            <summary>
            SmartFormatter configuration.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatterConfig.ParseErrorAction">
            <summary>
            Behavior of the parser in case of errors.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatterConfig.FormatErrorAction">
            <summary>
            Behavior of the formatter in case of errors.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatterConfig.CaseSensitivity">
            <summary>
            Determines whether placeholders are case-sensitive or not.
            Default is case-sensitive.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmartFormatterConfig.ConvertCharacterStringLiterals">
            <summary>
            This setting is relevant for the <see cref="T:MailMergeLib.SmartFormatMail.Core.Parsing.LiteralText"/>.
            If true (the default), character string literals are treated like in "normal" string.Format:
               string.Format("\t")   will return a "TAB" character
            If false, character string literals are not converted, just like with this string.Format:
               string.Format(@"\t")  will return the 2 characters "\" and "t"
            </summary>
        </member>
        <member name="E:MailMergeLib.SmartFormatterConfig.OnConfigChanged">
            <summary>
            Event raising when the <see cref="T:MailMergeLib.SmartFormatterConfig"/> configuration has changed.
            </summary>
        </member>
        <member name="T:MailMergeLib.SmtpClientConfig">
            <summary>
            Class which is used by MailMergeSender in order to build preconfigured SmtpClients.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmtpClientConfig.#ctor">
            <summary>
            Creates a new instance of the configuration which is used by MailMergeSender in order to build a preconfigured SmtpClient.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.Name">
            <summary>
            Get or sets the name of configuration.
            It's recommended to choose different names for each configuration.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.SmtpHost">
            <summary>
            Gets or sets the name or IP address of the SMTP host to be used for sending mails.
            </summary>
            <remarks>Used during SmtpClient connect.</remarks>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.SmtpPort">
            <summary>
            Gets or set the port of the SMTP host to be used for sending mails.
            </summary>
            <remarks>Used during SmtpClient connect.</remarks>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.ClientDomain">
            <summary>
            Gets or sets the name of the local machine sent to the SMTP server with the hello command
            of an SMTP transaction. Defaults to the windows machine name.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.LocalEndPoint">
            <summary>
            Gets or sets the local IP end point or null to use the default end point.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.ClientCertificates">
            <summary>
            Gets the collection of certificates the <see cref="T:MailKit.Net.Smtp.SmtpClient"/> will use.
            </summary>
            <example>
            Add a certificate using a PFX file (i.e. a PKCS#12 archive bag):
            ClientCertificates.Add(new X509Certificate2("path_to_cert_file.pfx", "optional password"));
            Add a certificate using a cerificate file in PEM format:
            ClientCertificates.Add(X509Certificate.CreateFromCertFile("path_to_cert_file.pem"));
            </example>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.ServerCertificateValidationCallback">
            <summary>
            Verifies the remote Secure Sockets Layer (SSL) certificate used for authentication.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.NetworkCredential">
            <summary>
            Set authentification details for logging into an SMTP server.
            Set NetworkCredential to null if no authentification is required.
            </summary>
            <remarks>Used during SmtpClient connect.</remarks>
            <remarks>Will be serialized with attribute yaxlib:realtype="MailMergeLib.Credential" if assigned to an instance of MailMergeLib.Credential.</remarks>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.MailOutputDirectory">
            <summary>
            Gets or sets the name of the output directory of sent mail messages
            (only used if messages are not sent to SMTP server)
            </summary>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.MessageOutput">
            <summary>
            Gets or sets the location where to send mail messages.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.SslProtocols">
            <summary>
            Gets or sets the SSL/TLS protocols the <see cref="T:MailKit.Net.Smtp.SmtpClient"/> is allowed to use.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.SecureSocketOptions">
            <summary>
            Gets or sets the SecureSocketOptions the <see cref="T:MailKit.Net.Smtp.SmtpClient"/> will use (e.g. SSL or STARTLS
            In case a secure socket is needed, setting options to SecureSocketOptions.Auto is recommended.
            </summary>
            <remarks>Used during <see cref="T:MailKit.Net.Smtp.SmtpClient"/> connect.</remarks>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.Timeout">
            <summary>
            Gets or sets the timeout for sending a message, after which a time-out exception will raise.
            Timeout value in milliseconds. The default value is 100,000 (100 seconds). 
            </summary>
        </member>
        <member name="F:MailMergeLib.SmtpClientConfig.ProtocolLoggerDelegate">
            <summary>
            The delegate for an <see cref="T:MailKit.IProtocolLogger"/> that <see cref="T:MailKit.Net.Smtp.SmtpClient"/> will use to log the dialogue with the SMTP server.
            This logger is dedicated to debugging, not for production use.
            </summary>
            <remarks>
            Have in mind that MailMergeLib may use several <see cref="T:MailKit.Net.Smtp.SmtpClient"/> concurrently.
            The delegate is called when creating a new instance of an <see cref="T:MailKit.Net.Smtp.SmtpClient"/> is created.
            </remarks>
            <example>
            ProtocolLoggerDelegate = () =&gt; new ProtocolLogger(System.IO.Path.Combine("targetDirectory", "Smtp-" + System.IO.Path.GetRandomFileName() + ".log"));
            </example>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.DelayBetweenMessages">
            <summary>
            Gets or sets the delay time in milliseconds (0-10000) between the messages.
            In case more than one SmtpClient will be used concurrently, the delay will be used per thread.
            Mainly used for debug purposes.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.MaxFailures">
            <summary>
            Gets or sets the number of failures (1-10) for which a retry to send will be performed.
            </summary>
        </member>
        <member name="P:MailMergeLib.SmtpClientConfig.RetryDelayTime">
            <summary>
            Gets or sets the delay time in milliseconds (0-10000) to elaps between retries to send the message.
            </summary>
        </member>
        <member name="M:MailMergeLib.SmtpClientConfig.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other"></param>
            <returns></returns>
            <remarks>
            Excluding those properties which are not serialized:
            ClientCertificates, ServerCertificateValidationCallback, NetworkCredential, ProtocolLoggerDelegate
            </remarks>
        </member>
        <member name="M:MailMergeLib.SmtpClientConfig.Equals(MailMergeLib.SmtpClientConfig)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other"></param>
            <returns></returns>
            <remarks>
            Excluding those properties which are not serialized:
            ClientCertificates, ServerCertificateValidationCallback, NetworkCredential, ProtocolLoggerDelegate
            </remarks>
        </member>
        <member name="M:MailMergeLib.SmtpClientConfig.GetHashCode">
            <summary>
             Returns the hastcode for this object.
            </summary>
            <returns></returns>
            <remarks>
            Excluding those properties which are not serialized:
            ClientCertificates, ServerCertificateValidationCallback, NetworkCredential, ProtocolLoggerDelegate
            </remarks>
        </member>
        <member name="T:MailMergeLib.StreamAttachment">
            <summary>
            Class for information about file attachments for mail messages
            </summary>
        </member>
        <member name="M:MailMergeLib.StreamAttachment.#ctor(System.IO.Stream,System.String,System.String)">
            <summary>
            Creates a new stream attachment information
            </summary>
            <param name="stream">Stream to add as an attachment</param>
            <param name="displayName">Name and extension as the reader of the mail should see it</param>
            <param name="mimeType">Mime type of the stream</param>
        </member>
        <member name="P:MailMergeLib.StreamAttachment.Stream">
            <summary>
            Gets the name of the file in the file system
            </summary>
        </member>
        <member name="P:MailMergeLib.StreamAttachment.DisplayName">
            <summary>
            Gets the name used in the attachment.
            </summary>
        </member>
        <member name="P:MailMergeLib.StreamAttachment.MimeType">
            <summary>
            Gets the MimeType as a string, like "text/plain" or "application/pdf"
            </summary>
        </member>
        <member name="T:MailMergeLib.StringAttachment">
            <summary>
            Class for information about file attachments for mail messages created from strings.
            </summary>
        </member>
        <member name="M:MailMergeLib.StringAttachment.#ctor">
            <summary>
            Creates a new string attachment for a <see cref="T:MailMergeLib.MailMergeMessage"/>
            </summary>
        </member>
        <member name="M:MailMergeLib.StringAttachment.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new string attachment for a <see cref="T:MailMergeLib.MailMergeMessage"/>
            </summary>
            <param name="content">Content for the attachment</param>
            <param name="displayName">Name and extension as the reader of the mail should see it (in case of inline attachments displayName is used for CIDs</param>
            <param name="mimeType">Mime type of the file</param>
        </member>
        <member name="M:MailMergeLib.StringAttachment.#ctor(System.String,System.String)">
            <summary>
            Creates a new file attachment information
            </summary>
            <param name="content">Content for the attachment</param>
            <param name="displayName">Name and extension as the reader of the mail should see it (in case of inline attachments displayName is used for CIDs</param>
        </member>
        <member name="P:MailMergeLib.StringAttachment.Content">
            <summary>
            Gets the content of the attachment
            </summary>
        </member>
        <member name="P:MailMergeLib.StringAttachment.DisplayName">
            <summary>
            Gets the name used in the attachment
            </summary>
        </member>
        <member name="P:MailMergeLib.StringAttachment.MimeType">
            <summary>
            Gets the MimeType as a string, like "text/plain"
            </summary>
        </member>
        <member name="M:MailMergeLib.StringAttachment.Equals(System.Object)">
            <summary>
            Determines whether the specified FileAttachment instances are equal.
            </summary>
            <remarks>E.g. necessary for HashSet&lt;FileAttachment&gt;.</remarks>
            <param name="sa"></param>
            <returns>Returns true, if both FileAttachments are equal, else false.</returns>
        </member>
        <member name="M:MailMergeLib.StringAttachment.GetHashCode">
            <summary>
            The HashCode for the StringAttachment.
            </summary>
            <returns>Returns the HashCode for the StringAttachment.</returns>
            <remarks>E.g. necessary for HashSet&lt;StringAttachment&gt;.</remarks>
        </member>
        <member name="T:MailMergeLib.Templates.Part">
            <summary>
            The class represents the single list item of type <see cref="T:MailMergeLib.Templates.Part"/>.
            To change a <see cref="T:MailMergeLib.Templates.Part"/> remove the part to change and add a new one.
            </summary>
            <code>See the code sample for <see cref="T:MailMergeLib.Templates.Templates"/></code>
        </member>
        <member name="M:MailMergeLib.Templates.Part.#ctor">
            <summary>
            Initialize an instance of a part.
            </summary>
        </member>
        <member name="M:MailMergeLib.Templates.Part.#ctor(MailMergeLib.Templates.PartType,System.String,System.String)">
            <summary>
            Initialize an instance of a part.
            </summary>
            <param name="type"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="P:MailMergeLib.Templates.Part.Key">
            <summary>
            Gets the key of a part.
            </summary>
        </member>
        <member name="P:MailMergeLib.Templates.Part.Type">
            <summary>
            Gets the <see cref="T:MailMergeLib.Templates.PartType"/> of a part.
            </summary>
        </member>
        <member name="P:MailMergeLib.Templates.Part.Value">
            <summary>
            Gets the value (i.e. the Text or Html) of the part.
            Null assignments will be changed to empty string.
            </summary>
        </member>
        <member name="M:MailMergeLib.Templates.Part.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj"></param>
            <returns>Returns true, if both instances are equal, else false.</returns>
        </member>
        <member name="M:MailMergeLib.Templates.Part.Equals(MailMergeLib.Templates.Part)">
            <summary>
            Compares the Part with an other instance of Part for equality.
            </summary>
            <param name="other"></param>
            <returns>Returns true, if both instances are equal, else false.</returns>
        </member>
        <member name="T:MailMergeLib.Templates.Parts">
            <summary>
            The class is a container for a list of type <see cref="T:MailMergeLib.Templates.Part"/>.
            </summary>
        </member>
        <member name="M:MailMergeLib.Templates.Parts.Add(MailMergeLib.Templates.Part)">
            <summary>
            Adds an object to the end of the list.
            </summary>
            <param name="newItem"></param>
        </member>
        <member name="M:MailMergeLib.Templates.Parts.AddRange(System.Collections.Generic.IEnumerable{MailMergeLib.Templates.Part})">
            <summary>
            Adds the elements of the specified collection to the end of the list.
            </summary>
            <param name="newItems"></param>
        </member>
        <member name="M:MailMergeLib.Templates.Parts.Equals(MailMergeLib.Templates.Parts)">
            <summary>
            Compares the Parts with an other instance of Parts for equality.
            </summary>
            <param name="other"></param>
            <returns>Returns true, if both instances are equal, else false.</returns>
        </member>
        <member name="T:MailMergeLib.Templates.PartType">
            <summary>
            The type of a <see cref="T:MailMergeLib.Templates.Part"/>.
            </summary>
            <code>See the code sample for <see cref="T:MailMergeLib.Templates.Templates"/></code>
        </member>
        <member name="F:MailMergeLib.Templates.PartType.Plain">
            <summary>
            Plain text, which can be used in a plain text or in a HTML context.
            </summary>
        </member>
        <member name="F:MailMergeLib.Templates.PartType.Html">
            <summary>
            HTML text, which can be used in a HTML context only.
            </summary>
        </member>
        <member name="T:MailMergeLib.Templates.Template">
            <summary>
            The class is a container for a list of type <see cref="T:MailMergeLib.Templates.Part"/>.
            </summary>
            <code>See the code sample for <see cref="T:MailMergeLib.Templates.Templates"/></code>
        </member>
        <member name="M:MailMergeLib.Templates.Template.#ctor">
            <summary>
            Creates an instance of a <see cref="T:MailMergeLib.Templates.Template"/> class.
            </summary>
        </member>
        <member name="M:MailMergeLib.Templates.Template.#ctor(System.String,MailMergeLib.Templates.Parts,System.String)">
            <summary>
            Creates an instance of a <see cref="T:MailMergeLib.Templates.Template"/> class.
            </summary>
            <param name="name">The name of the template.</param>
            <param name="parts">The <see cref="T:MailMergeLib.Templates.Parts"/> of the template.</param>
            <param name="defaultKey">The default key for the template, may be omitted.</param>
        </member>
        <member name="P:MailMergeLib.Templates.Template.Name">
            <summary>
            Gets or sets the Name of the <see cref="T:MailMergeLib.Templates.Template"/>
            </summary>
        </member>
        <member name="P:MailMergeLib.Templates.Template.Text">
            <summary>
            The property is a list of type <see cref="T:MailMergeLib.Templates.Parts"/>.
            </summary>
            <exception cref="T:MailMergeLib.Templates.TemplateException"></exception>
        </member>
        <member name="M:MailMergeLib.Templates.Template.GetParts(System.String)">
            <summary>
            Gets the parts for the <see cref="!:key"/> argument.
            If there is no part for the key, and the <see cref="P:MailMergeLib.Templates.Template.DefaultKey"/> is not Null,
            the parts for the default key are returned. If neither can be found, but there are only max.
            2 entries with 1 key, this one is returned. If all fail the returned array will be empty.
            </summary>
            <param name="key">The key to get the parts for. If null or omitted, the <see cref="P:MailMergeLib.Templates.Template.Key"/> property of the <see cref="T:MailMergeLib.Templates.Template"/> will be used.</param>
            <returns>If the <param name="key"/> parameter is found, it returns an array of <see cref="T:MailMergeLib.Templates.Part"/> for the <param name="key"/> parameter, else from the default key.</returns>
        </member>
        <member name="P:MailMergeLib.Templates.Template.Key">
            <summary>
            Sets or gets the key to be used for mail merge of this <see cref="T:MailMergeLib.Templates.Template"/>.
            </summary>
            <exception cref="T:MailMergeLib.Templates.TemplateException"></exception>
        </member>
        <member name="P:MailMergeLib.Templates.Template.DefaultKey">
            <summary>
            Sets or gets the default key of this <see cref="T:MailMergeLib.Templates.Template"/>.
            The DefaultKey setting usually comes from deserialized XML.
            </summary>
            <exception cref="T:MailMergeLib.Templates.TemplateException"></exception>
        </member>
        <member name="P:MailMergeLib.Templates.Template.Item(System.String)">
            <summary>
            Gets an array of type <see cref="T:MailMergeLib.Templates.Part"/> for the specified index.
            </summary>
            <param name="key"></param>
            <returns>Returns an array with one or two parts, or an empty array if the key does not exist.</returns>
        </member>
        <member name="M:MailMergeLib.Templates.Template.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj"></param>
            <returns>Returns true, if both instances are equal, else false.</returns>
        </member>
        <member name="T:MailMergeLib.Templates.TemplateException">
            <summary>
            Represents errors that occur during changing the <see cref="P:MailMergeLib.Templates.TemplateException.Templates"/> object graph programmatically, including during deserialization.
            </summary>
        </member>
        <member name="P:MailMergeLib.Templates.TemplateException.Part">
            <summary>
            Gets the <see cref="P:MailMergeLib.Templates.TemplateException.Part"/> causing the exception, if not null.
            </summary>
        </member>
        <member name="P:MailMergeLib.Templates.TemplateException.Parts">
            <summary>
            Gets the <see cref="P:MailMergeLib.Templates.TemplateException.Parts"/> causing the exception, if not null.
            </summary>
        </member>
        <member name="P:MailMergeLib.Templates.TemplateException.Template">
            <summary>
            Gets the <see cref="P:MailMergeLib.Templates.TemplateException.Template"/> causing the exception, if not null.
            </summary>
        </member>
        <member name="P:MailMergeLib.Templates.TemplateException.Templates">
            <summary>
            Gets the <see cref="P:MailMergeLib.Templates.TemplateException.Templates"/> causing the exception, if not null.
            </summary>
        </member>
        <member name="T:MailMergeLib.Templates.Templates">
            <summary>
            The class is a container for a list of type <see cref="T:MailMergeLib.Templates.Template"/>.
            </summary>
            <code>
            var tp = new Templates();
            var countries = new List&lt;Part&gt;()
            {
               new Part(PartType.Plain, "Germany", "German content"),
               new Part(PartType.Plain,"Austria", "Austrian content"),
               new Part(PartType.Plain, "USA", "US American content"),
               new Part(PartType.Plain, "Canada", "Canadian content"),
               new Part(PartType.Plain, "Brazil", "Brazilian content")
            };
            tp.Add(new Template() {Id = "Country", DefaultKey = "Brazil", Text = countries } );
            // Get the content for a specific country:
            var countryContent = tp["Country"]["USA"]; // evaluating the given key only
            countryContent = tp["Country"].GetParts("Canada"); // evaluating given key and DefaultKey
            </code>
            <c>XML representation of the serialized Templates:</c>
            <code>
            &lt;Templates&gt;
             &lt;Template Name="Country"&gt;
               &lt;Text DefaultKey="Brazil"&gt;
                 &lt;Part Key="Germany" Type="Plain"&gt;German content&lt;/Part&gt;
                 &lt;Part Key="Germany" Type="Html"&gt;German HTML content&lt;/Part&gt;
                 &lt;Part Key="Austria" Type="Plain"&gt;Austrian content&lt;/Part&gt;
                 &lt;Part Key="USA" Type="Plain"&gt;US American content&lt;/Part&gt;
                 &lt;Part Key="Canada" Type="Plain"&gt;Canadian content&lt;/Part&gt;
                 &lt;Part Key="Brazil" Type="Plain"&gt;Brazilian content&lt;/Part&gt;
               &lt;/Text&gt;
             &lt;/Template&gt;
            &lt;/Templates&gt;
            </code>
        </member>
        <member name="M:MailMergeLib.Templates.Templates.#ctor">
            <summary>
            Creates an instance of a TestParts class.
            </summary>
        </member>
        <member name="P:MailMergeLib.Templates.Templates.Item(System.String)">
            <summary>
            Gets the <see cref="T:MailMergeLib.Templates.Template"/> for the specified name.
            </summary>
            <param name="name"></param>
            <returns></returns>
            <exception cref="T:MailMergeLib.Templates.TemplateException"></exception>
        </member>
        <member name="M:MailMergeLib.Templates.Templates.Add(MailMergeLib.Templates.Template)">
            <summary>
            Adds an object to the end of the list.
            </summary>
            <param name="newItem"></param>
        </member>
        <member name="M:MailMergeLib.Templates.Templates.AddRange(System.Collections.Generic.IEnumerable{MailMergeLib.Templates.Template})">
            <summary>
            Adds the elements of the specified collection to the end of the list.
            </summary>
            <param name="newItems"></param>
        </member>
        <member name="M:MailMergeLib.Templates.Templates.Serialize">
            <summary>
            Serialize <see cref="T:MailMergeLib.Templates.Templates"/> to XML.
            </summary>
            <returns>Returns a string with XML markup.</returns>
        </member>
        <member name="M:MailMergeLib.Templates.Templates.Serialize(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Write <see cref="T:MailMergeLib.Templates.Templates"/> to an XML stream.
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.Templates.Templates.Serialize(System.String,System.Text.Encoding)">
            <summary>
            Write <see cref="T:MailMergeLib.Templates.Templates"/> to a file.
            </summary>
            <param name="filename"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.Templates.Templates.Serialize(System.IO.TextWriter,System.Boolean)">
            <summary>
            Write <see cref="T:MailMergeLib.Templates.Templates"/> with a StreamWriter.
            </summary>
            <param name="writer"></param>
            <param name="isStream">If true, the writer will not be closed and disposed, so that the underlying stream can be used on return.</param>
        </member>
        <member name="M:MailMergeLib.Templates.Templates.Deserialize(System.String)">
            <summary>
            Deserialize the parameter with XML markup to an instance of <see cref="T:MailMergeLib.Templates.Templates"/>.
            </summary>
            <param name="xml"></param>
            <returns>Returns an instance of <see cref="T:MailMergeLib.Templates.Templates"/>.</returns>
        </member>
        <member name="M:MailMergeLib.Templates.Templates.Deserialize(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads <see cref="T:MailMergeLib.Templates.Templates"/> from an XML stream.
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.Templates.Templates.Deserialize(System.String,System.Text.Encoding)">
            <summary>
            Reads <see cref="T:MailMergeLib.Templates.Templates"/> from an XML file.
            </summary>
            <param name="filename"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:MailMergeLib.Templates.Templates.Equals(MailMergeLib.Templates.Templates)">
            <summary>
            Compares the Templates with an other instance of Templates for equality.
            </summary>
            <param name="other"></param>
            <returns>Returns true, if both instances are equal, else false.</returns>
        </member>
        <member name="T:MailMergeLib.Tools">
            <summary>
            Tools used by classes of MailMergeLib.
            </summary>
        </member>
        <member name="M:MailMergeLib.Tools.IsFullPath(System.String)">
            <summary>
            Checks whether the given path is a full path
            </summary>
            <remarks>
            Accepts X:\ and \\UNC\PATH, rejects empty string, \ and X:
            </remarks>
            <param name="path"></param>
            <returns>Returns true if the path is absolute, else false.</returns>
        </member>
        <member name="M:MailMergeLib.Tools.MakeFullPath(System.String,System.String)">
            <summary>
            Combines the specified filename with the basename of 
            to form a full path to file or directory.
            </summary>
            <param name="basename">The relative or absolute path.</param>
            <param name="filename">The filename, which may include a relative path.</param>
            <returns>
            A rooted path.
            </returns>
        </member>
        <member name="M:MailMergeLib.Tools.RelativePathTo(System.String,System.String)">
            <summary>
            Creates a relative path from one file or folder to another. Replaces Windows' PathRelativePathTo function.
            </summary>
            <param name="fromDirectory">Contains the directory that defines the start of the relative path.</param>
            <param name="toPath">Contains the path that defines the endpoint of the relative path.</param>
            <returns>The relative path from the start directory to the end path.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:MailMergeLib.Tools.IsSevenBit(System.String)">
            <summary>
            Checks a string, whether it consists of pure seven bit characters.
            </summary>
            <param name="text">string text</param>
            <returns>true, if text only contains seven bit characters - else false.</returns>
        </member>
        <member name="M:MailMergeLib.Tools.IsSevenBit(System.IO.Stream)">
            <summary>
            Checks a Stream, whether it consists of pure seven bit bytes.
            Assuming UTF8 encoding of the stream.
            </summary>
            <param name="stream">System.IO.Stream stream</param>
            <returns>true, if Stream only contains seven bit bytes - else false.</returns>
        </member>
        <member name="M:MailMergeLib.Tools.IsSevenBit(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Checks a Stream, whether it consists of pure seven bit bytes.
            </summary>
            <param name="stream">System.IO.Stream stream</param>
            <param name="characterEncoding">System.Text.Encoding encoding</param>
            <returns>true, if Stream only contains seven bit characters - else false.</returns>
        </member>
        <member name="M:MailMergeLib.Tools.Stream2String(System.IO.Stream)">
            <summary>
            Converts a stream to a string using UTF8 Encoding.
            </summary>
            <param name="stream">System.IO.Stream stream</param>
            <returns>string representation of the stream.</returns>
        </member>
        <member name="M:MailMergeLib.Tools.Stream2String(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Converts a stream to a string.
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.Tools.WrapLines(System.String,System.Int32)">
            <summary>
            Wraps lines of text not exceeding the maximum length given.
            </summary>
            <param name="input"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.Tools.WrapLine(System.String,System.Int32)">
            <summary>
            Wraps a single of text not exceeding the maximum length given.
            </summary>
            <param name="input"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:MailMergeLib.Tools.ParseMailAddress(System.String,System.String@,System.String@)">
            <summary>
            Parses the email address and breaks into display name and address part.
            </summary>
            <remarks>
            Method is maintained because of compatibility reasons and it's only a wrapper for
            MimeKit.MailboxAddress.Parse(...).
            </remarks>
            <param name="inputAddr"></param>
            <param name="displayName"></param>
            <param name="address"></param>
        </member>
        <member name="M:MailMergeLib.Tools.CalcMessageSize(MimeKit.MimeMessage)">
            <summary>
            Calculates the size of a MimeMessage
            </summary>
            <param name="msg"></param>
            <returns>Size of a message in bytes.</returns>
            <remarks>
            The ContentIds and Boundaries of a MimeMessage will change each time the message is written, so the size may differ for a few bytes.
            </remarks>
        </member>
        <member name="M:MailMergeLib.Tools.GetMimeCharset(System.Text.Encoding)">
            <summary>
            Gets the header encoding (aka mime encoding) for the Encoding.
            </summary>
            <remarks>
            Required, because Encoding.HeaderName is not supported in .Net Core.
            </remarks>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="T:MailMergeLib.UriScheme">
            <summary>
            Uri schemes
            </summary>
            <remarks>
            Supplied because .Net Core &lt;= 1.6 does not include the Uri.[Scheme] public fields which are suppliedin the Uri class of .NET 4.x
            </remarks>
        </member>
        <member name="F:MailMergeLib.UriScheme.SchemeDelimiter">
            <summary>
            Specifies the characters that separate the communication protocol scheme from the address portion of the URI. This field is read-only.
            </summary>
            <value>"://"</value>
        </member>
        <member name="F:MailMergeLib.UriScheme.File">
            <summary>
            Specifies that the URI is a pointer to a file. This field is read-only.
            </summary>
            <value>"file"</value>
        </member>
        <member name="F:MailMergeLib.UriScheme.Ftp">
            <summary>
            Specifies that the URI is accessed through the File Transfer Protocol (FTP). This field is read-only.
            </summary>
            <value>"ftp"</value>
        </member>
        <member name="F:MailMergeLib.UriScheme.Gopher">
            <summary>
            Specifies that the URI is accessed through the Gopher protocol. This field is read-only.
            </summary>
            <value>"gopher"</value>
        </member>
        <member name="F:MailMergeLib.UriScheme.Http">
            <summary>
            Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP). This field is read-only.
            </summary>
            <value>"http"</value>
        </member>
        <member name="F:MailMergeLib.UriScheme.Https">
            <summary>
            Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS). This field is read-only.
            </summary>
            <value>"https"</value>
        </member>
        <member name="F:MailMergeLib.UriScheme.Mailto">
            <summary>
            Specifies that the URI is an e-mail address and is accessed through the Simple Mail Transport Protocol (SMTP). This field is read-only.
            </summary>
            <value>"mailto"</value>
        </member>
        <member name="F:MailMergeLib.UriScheme.NetPipe">
            <summary>
            Specifies that the URI is accessed through the NetPipe scheme used by Windows Communication Foundation (WCF). This field is read-only.
            </summary>
            <value>"net.pipe"</value>
        </member>
        <member name="F:MailMergeLib.UriScheme.NetTcp">
            <summary>
            Specifies that the URI is accessed through the NetTcp scheme used by Windows Communication Foundation (WCF). This field is read-only.
            </summary>
            <value>"net.tcp"</value>
        </member>
        <member name="F:MailMergeLib.UriScheme.News">
            <summary> is read-only.
            </summary>
            <value>"mailto"</value>
        </member>
        <member name="F:MailMergeLib.UriScheme.NetPipe">
            <summary>
            Specifies that the URI is accessed through the NetPipe scheme used by Windows Communication Foundation (WCF). This field is read-only.
            </summary>
            <value>"net.pipe"</value>
        </member>
        <member name="F:MailMergeLib.UriScheme.NetTcp">
            <summary>
            Specifies that the URI is accessed through the NetTcp scheme used by Windows Communication Foundation (WCF). This field is read-only.
            </summary>
            <value>"net.tcp"</value>
        </member>
        <member name="F:MailMergeLib.UriScheme.News">
            <summary>
            Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP). This field is read-only.
            </summary>
            <value>"news"</value>
        </member>
        <member name="F:MailMergeLib.UriScheme.Nntp">
            <summary>
            Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP). This field is read-only.
            </summary>
            <value>"nntp"</value>
        </member>
    </members>
</doc>
