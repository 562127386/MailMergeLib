<?xml version="1.0"?>
<package >
  <metadata>
    <id>MailMergeLib</id>
    <version>5.0.1.1</version>
    <title>MailMergeLib</title>
    <authors>axuno gGmbH</authors>
    <owners>axuno gGmbH</owners>
    <licenseUrl>https://github.com/axuno/MailMergeLib/blob/master/MailMergeLib/License.txt</licenseUrl>
    <projectUrl>https://github.com/axuno/MailMergeLib</projectUrl>
    <iconUrl>https://github.com/axuno/MailMergeLib/raw/master/MailMergeLib_64x64.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <summary>MailMergeLib is a C# SMTP mail client library which provides comfortable mail merge capabilities for text, inline images and attachments, good throughput and fault tolerance for sending mail messages.</summary>
    <description>MailMergeLib is a C# SMTP mail client library which provides comfortable mail merge capabilities for text, inline images and attachments, good throughput and fault tolerance for sending mail messages.
    	
1. Mail message generation:
* Email templates can be fully individualized in terms of recipients, subject, HTML and/or plain text, attachments and even headers. Placeholders are inserted as variable names from data source between curly braces like so: {MailboxAddress.Name} or with formatting arguments known form string.format like {Date:yyyy-MM-dd}.
* HTML text may contain images from local hard disk, which will be automatically inserted as inline attachments.
* For HTML text MailMergeLib can generate a plain text representation.
* The data source for email merge messages to a number of recipients and be any IEnumerable object as well as DataTables. The data source for single emails can be any of the following types: Dictionary&lt;string,object&gt;, ExpandoObject, DataRow, any class instances or anonymous types. For class instances it's even allowed to use the name of parameter less methods.

2. Sending email messages:
* Practically unlimited number of parallel tasks to send out individualized emails to a big number of recipients.
* SmptClients for each task can get their own preconfigured settings, so that e.g. several mail servers can be used for one send job.
* Progress of processing emails can easily be observed with a number of events.
* SMTP failures can automatically be resolved supplying a backup configuration. This fault-tolerance is essential for unattended production systems.
* Configuration settings for messages and SMTP can be stored to and loaded from an XML file.
    </description>
    <releaseNotes>First Nuget Release.</releaseNotes>
    <copyright>Copyright 2007-2016 by axuno gGmbH</copyright>
    <tags>smtp mime mail email merge template net40 net45 c#</tags>
    <dependencies>
		<group targetFramework="net40">
			<dependency id="MailKit" version="1.6" />
			<dependency id="AngleSharp" version="0.9" />
			<dependency id="Microsoft.Bcl" version="1.1.10"/>
			<dependency id="Microsoft.Bcl.Async" version="1.0.168" />
			<dependency id="Microsoft.Bcl.Build" version="1.0.21" />
		</group>
		<group targetFramework="net45">
			<dependency id="MailKit" version="1.6" />
			<dependency id="AngleSharp" version="0.9" />
		</group>
    </dependencies>
  </metadata>
  <files>
		<file src="..\bin\Release\net40\MailMergeLib.dll" target="lib\net40\MailMergeLib.dll" />
		<file src="..\bin\Release\net40\MailMergeLib.xml" target="lib\net40\MailMergeLib.xml" />
		<file src="..\bin\Release\net45\MailMergeLib.dll" target="lib\net45\MailMergeLib.dll" />
		<file src="..\bin\Release\net45\MailMergeLib.xml" target="lib\net45\MailMergeLib.xml" />
  </files>
</package>
